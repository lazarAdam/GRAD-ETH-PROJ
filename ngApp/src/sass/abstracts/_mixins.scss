@mixin clearfix {

  &::after {
    content: "";
    display: table;
    clear: both;

  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin btnBasic{

  &,// any element like <div>, <button>,
  &:link,// element <a> use :link and :visited
  &:visited {
    text-transform: uppercase;
    font-weight: 700;
    text-decoration: none;
    padding: 1.5rem 2rem;
    display: inline-block;
    border-radius: 20rem;
    transition: all .2s;
    position: relative;
    font-size: $default-font-size;
    line-height: 1;
    //
    //change for thr <button> element

    border: none;
    cursor: pointer;
  }


  &[disabled],
  &:disabled,
  &[disabled]:after,
  &:disabled:after,
  &[disabled]:hover,
  &:disabled:hover,{
    background-color: var( --color-Grey-dark-2) !important;
    color: var(--color-Grey-dark-4) !important;

    & > svg{
      fill:var( --color-Grey-dark-2) !important ;
    }
  }


}

// MEDIA QUERY MANAGER FOR DESKTOP FIRST RESPONSIVE DESIGN

/**
0 - 600px: PHONE
600 - 900px: Tablet Portrait
900 - 1200px: Tablet Landscape
[1200 - 1800] is where the normal style apply (desktop first)
1800px + : large desktop screens
 */


/**
$breakpoint argument choices
-phone
-tab-port
-tab-land
- large-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px em being used instead of rem in breakpoints because em amd rems are not effected by the set root font setting
and always refer to the default browser font size also rems don't work well with media queries on some browsers.
 */

@mixin responsive($breakpoint, $val:"") {

  @if $breakpoint == phone {

    @media only screen and (max-width: 37.5em) { // up to 600px 600/16 = 37.5
      @content
    }
  }
  @if $breakpoint == tab-port {

    @media only screen and (max-width: 56.25em) { //up to 900px
      @content
    }
  }
  @if $breakpoint == tab-land {

    @media only screen and (max-width: 75em) { // up to 1200px
      @content
    }
  }
  @if $breakpoint ==large-desktop {

    @media only screen and (min-width: 112.5em) { // starting from 1800px
      @content
    }
  }

  @else{

    @media only screen and (max-width: $breakpoint) {
      @content
    }
  }

}


// MEDIA QUERY MANAGER FOR MOBILE FIRST RESPONSIVE DESIGN
//@mixin responsive-mobil-first($breakpoint) {
//
//
//  @if $breakpoint == tab-port {
//
//    @media (min-width: 37.5rem) { //starting from 600px
//      @content
//    }
//  }
//
//  @if $breakpoint == tab-land {
//
//    @media (min-width: 56.25em) { // staring from 900px
//      @content
//    }
//  }
//
//  @if $breakpoint == desktop {
//
//    @media (min-width: 75em) { // starting from 1200px
//      @content
//    }
//  }
//
//  @if $breakpoint ==large-desktop {
//
//    @media (min-width: 112.5em) { // starting from 1800px
//      @content
//    }
//  }
//
//}

