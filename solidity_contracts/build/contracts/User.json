{
  "contractName": "User",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NFTid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NewNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "stateMsg",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "UserCreatedStatus",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NFTApprovals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NFTOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NFTsList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "NftCategory",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "artFileUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllNFTs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "NftCategory",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "artFileUrl",
              "type": "string"
            }
          ],
          "internalType": "struct NFT.Nft[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "mintingLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUserData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "userName",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "mintingLimit",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct User.UserData",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "artFileUrl",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        }
      ],
      "name": "createNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NFTid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stateMsg\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"UserCreatedStatus\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTsList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"NftCategory\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"artFileUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"artFileUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"}],\"name\":\"createNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"NftCategory\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"artFileUrl\",\"type\":\"string\"}],\"internalType\":\"struct NFT.Nft[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"mintingLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct User.UserData\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"mintingLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createNewNFT(string,uint256,string,string,string)\":{\"details\":\"Function to create a new NFT for a user calling this function\"},\"getUserData()\":{\"details\":\"Function to retrieve an existing user data\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/user.sol\":\"User\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/erc721.sol\":{\"keccak256\":\"0x4cb418aa98c81c8ca8e0286af0b271c9b7b32376f93993a81bdcf94dc47acba8\",\"urls\":[\"bzz-raw://ae76de4f16938a0663cb6ddd029389d59b4ef9879cad0531c710f117ccaf6a2f\",\"dweb:/ipfs/QmPyf9SAYZbwF8KEmJfW4B8CcED9641RhoaMuej4AgcoDe\"]},\"project:/contracts/nft.sol\":{\"keccak256\":\"0x036d16c7b1b17a910ef147f9d0d3dd4057bc1a0ed8e291a652f3e137b5abcb18\",\"urls\":[\"bzz-raw://0b48217a9334daa73087fc176237bfc538160f06514c54b257670dcccb4c13a7\",\"dweb:/ipfs/QmTNa7Vmxu9TtHa8jUvD7cDFT4jabr8T4NfiDvGS5EA4TX\"]},\"project:/contracts/ownable.sol\":{\"keccak256\":\"0xe4249564c3d41ecd48cda271a956ad9d31044b94ba088ec2a7d8dd4a31bcf354\",\"urls\":[\"bzz-raw://c65d3ec3f73d3e14da594a34a73588fdb0cfcadc29173fa96cc1c688f4b7a332\",\"dweb:/ipfs/QmbLds1SX24RmtKoVvQKJvjL6WsWoLNGz1XLipvQzHZc93\"]},\"project:/contracts/safemath.sol\":{\"keccak256\":\"0x9dda5b6785a025a4500f1f2d29c618490ea57707079d30cc0bd91fdef3489a1c\",\"urls\":[\"bzz-raw://3a09f2213d624a9df6a5b1798311e35a0f8fab815b20bd044cf60fd58215c86b\",\"dweb:/ipfs/QmdogpabpLPvD1riq6Eh18mWSz1GhTPBrwbuN4ArqMqmPE\"]},\"project:/contracts/user.sol\":{\"keccak256\":\"0xe2cdc085a860bdd6459cd764d4ee73fc608d25fb605ce594ce21f0a18a72f93e\",\"urls\":[\"bzz-raw://d3ef8f4f9e46191b0db21cadec45b16327ad6c51b25fb1fb208c55a68c9642fd\",\"dweb:/ipfs/Qmcg1YJGdRpaUBCzxEnhUoYBEAahYAYXbgktYGV16qE2wv\"]}},\"version\":1}",
  "bytecode": "0x608060405233600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361224f806100d16000396000f3fe6080604052600436106100f35760003560e01c8063a87430ba1161008a578063e0391b0911610059578063e0391b0914610325578063e602eb3d14610350578063f2fde38b14610391578063fb88df18146103ba576100f3565b8063a87430ba14610242578063caa56c6d14610282578063d51fe9cb146102ab578063dd297ce8146102e8576100f3565b806370a08231116100c657806370a0823114610198578063715018a6146101d55780638da5cb5b146101ec5780638f32d59b14610217576100f3565b8063095ea7b3146100f857806322e8c87d1461011457806323b872dd1461013f5780636352211e1461015b575b600080fd5b610112600480360361010d919081019061198d565b6103f7565b005b34801561012057600080fd5b5061012961054a565b6040516101369190611fa4565b60405180910390f35b6101596004803603610154919081019061193e565b6106be565b005b34801561016757600080fd5b50610182600480360361017d9190810190611aa0565b61083f565b60405161018f9190611e64565b60405180910390f35b3480156101a457600080fd5b506101bf60048036036101ba9190810190611915565b61087b565b6040516101cc9190611fc6565b60405180910390f35b3480156101e157600080fd5b506101ea6108c4565b005b3480156101f857600080fd5b50610201610996565b60405161020e9190611e64565b60405180910390f35b34801561022357600080fd5b5061022c6109c0565b6040516102399190611ea1565b60405180910390f35b34801561024e57600080fd5b5061026960048036036102649190810190611915565b610a18565b6040516102799493929190611ebc565b60405180910390f35b34801561028e57600080fd5b506102a960048036036102a491908101906119c9565b610b0d565b005b3480156102b757600080fd5b506102d260048036036102cd9190810190611aa0565b610bb7565b6040516102df9190611e64565b60405180910390f35b3480156102f457600080fd5b5061030f600480360361030a9190810190611aa0565b610bea565b60405161031c9190611e64565b60405180910390f35b34801561033157600080fd5b5061033a610c1d565b6040516103479190611e7f565b60405180910390f35b34801561035c57600080fd5b5061037760048036036103729190810190611aa0565b610e76565b604051610388959493929190612011565b60405180910390f35b34801561039d57600080fd5b506103b860048036036103b39190810190611915565b611081565b005b3480156103c657600080fd5b506103e160048036036103dc9190810190611915565b61109e565b6040516103ee9190611fc6565b60405180910390f35b8060008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f90611f56565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6105526117b2565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b34600382815481106106cc57fe5b906000526020600020906005020160030154148061074857503373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611f08565b60405180910390fd5b6107928383836110b6565b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156107dd573d6000803e3d6000fd5b50818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108cc6109c0565b6108d557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6005602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b9b57600080fd5b610ba481611236565b610bb085858585611314565b5050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610e6d57838290600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d075780601f10610cdc57610100808354040283529160200191610d07565b820191906000526020600020905b815481529060010190602001808311610cea57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610da95780601f10610d7e57610100808354040283529160200191610da9565b820191906000526020600020905b815481529060010190602001808311610d8c57829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e555780601f10610e2a57610100808354040283529160200191610e55565b820191906000526020600020905b815481529060010190602001808311610e3857829003601f168201915b50505050508152505081526020019060010190610c41565b50505050905090565b60038181548110610e8357fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f355780601f10610f0a57610100808354040283529160200191610f35565b820191906000526020600020905b815481529060010190602001808311610f1857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd35780601f10610fa857610100808354040283529160200191610fd3565b820191906000526020600020905b815481529060010190602001808311610fb657829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110775780601f1061104c57610100808354040283529160200191611077565b820191906000526020600020905b81548152906001019060200180831161105a57829003601f168201915b5050505050905085565b6110896109c0565b61109257600080fd5b61109b81611526565b50565b60016020528060005260406000206000915090505481565b61110860018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061119d60018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461163c90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60001515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16151514156112d85761129b81611653565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c9060016040516112cb9190611f76565b60405180910390a1611311565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c9060006040516113089190611f28565b60405180910390a15b50565b6000600160036040518060a001604052806000815260200188815260200186815260200187815260200185815250908060018154018082558091505090600182039060005260206000209060050201600090919290919091506000820151816000015560208201518160010190805190602001906113939291906117f2565b5060408201518160020190805190602001906113b09291906117f2565b506060820151816003015560808201518160040190805190602001906113d79291906117f2565b50505003905080600382815481106113eb57fe5b9060005260206000209060050201600001819055503360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114a360018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162090919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff3516922ab7b85da7be501737934fc735e896c9a5685afafa68a7680ba6feed08186604051611517929190611fe1565b60405180910390a15050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561156057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101561163257fe5b8091505092915050565b60008282111561164857fe5b818303905092915050565b61165b6117b2565b6040518060800160405280838152602001600115158152602001600481526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906116f49291906117f2565b5060208201518160010160006101000a81548160ff0219169083151502179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405180608001604052806060815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061183357805160ff1916838001178555611861565b82800160010185558215611861579182015b82811115611860578251825591602001919060010190611845565b5b50905061186e9190611872565b5090565b61189491905b80821115611890576000816000905550600101611878565b5090565b90565b6000813590506118a6816121de565b92915050565b600082601f8301126118bd57600080fd5b81356118d06118cb826120a6565b612079565b915080825260208301602083018583830111156118ec57600080fd5b6118f783828461218b565b50505092915050565b60008135905061190f816121f5565b92915050565b60006020828403121561192757600080fd5b600061193584828501611897565b91505092915050565b60008060006060848603121561195357600080fd5b600061196186828701611897565b935050602061197286828701611897565b925050604061198386828701611900565b9150509250925092565b600080604083850312156119a057600080fd5b60006119ae85828601611897565b92505060206119bf85828601611900565b9150509250929050565b600080600080600060a086880312156119e157600080fd5b600086013567ffffffffffffffff8111156119fb57600080fd5b611a07888289016118ac565b9550506020611a1888828901611900565b945050604086013567ffffffffffffffff811115611a3557600080fd5b611a41888289016118ac565b935050606086013567ffffffffffffffff811115611a5e57600080fd5b611a6a888289016118ac565b925050608086013567ffffffffffffffff811115611a8757600080fd5b611a93888289016118ac565b9150509295509295909350565b600060208284031215611ab257600080fd5b6000611ac084828501611900565b91505092915050565b6000611ad58383611d5f565b905092915050565b611ae681612143565b82525050565b611af581612143565b82525050565b6000611b06826120e2565b611b108185612110565b935083602082028501611b22856120d2565b8060005b85811015611b5e5784840389528151611b3f8582611ac9565b9450611b4a83612103565b925060208a01995050600181019050611b26565b50829750879550505050505092915050565b611b7981612155565b82525050565b611b8881612155565b82525050565b6000611b99826120f8565b611ba38185612132565b9350611bb381856020860161219a565b611bbc816121cd565b840191505092915050565b6000611bd2826120ed565b611bdc8185612121565b9350611bec81856020860161219a565b611bf5816121cd565b840191505092915050565b6000611c0b826120ed565b611c158185612132565b9350611c2581856020860161219a565b611c2e816121cd565b840191505092915050565b6000611c46602e83612132565b91507f596f7520646f6e2774206861766520656e6f7567682066756e647320666f722060008301527f74686973207472616e73666572210000000000000000000000000000000000006020830152604082019050919050565b6000611cac600d83612132565b91507f55736572206578697374732021000000000000000000000000000000000000006000830152602082019050919050565b6000611cec601783612132565b91507f596f7520617265206e6f7420746865206f776e657220210000000000000000006000830152602082019050919050565b6000611d2c601183612132565b91507f4e657720557365722043726561746564210000000000000000000000000000006000830152602082019050919050565b600060a083016000830151611d776000860182611e46565b5060208301518482036020860152611d8f8282611bc7565b91505060408301518482036040860152611da98282611bc7565b9150506060830151611dbe6060860182611e46565b5060808301518482036080860152611dd68282611bc7565b9150508091505092915050565b60006080830160008301518482036000860152611e008282611bc7565b9150506020830151611e156020860182611b70565b506040830151611e286040860182611e46565b506060830151611e3b6060860182611add565b508091505092915050565b611e4f81612181565b82525050565b611e5e81612181565b82525050565b6000602082019050611e796000830184611aec565b92915050565b60006020820190508181036000830152611e998184611afb565b905092915050565b6000602082019050611eb66000830184611b7f565b92915050565b60006080820190508181036000830152611ed68187611c00565b9050611ee56020830186611b7f565b611ef26040830185611e55565b611eff6060830184611aec565b95945050505050565b60006020820190508181036000830152611f2181611c39565b9050919050565b60006040820190508181036000830152611f4181611c9f565b9050611f506020830184611b7f565b92915050565b60006020820190508181036000830152611f6f81611cdf565b9050919050565b60006040820190508181036000830152611f8f81611d1f565b9050611f9e6020830184611b7f565b92915050565b60006020820190508181036000830152611fbe8184611de3565b905092915050565b6000602082019050611fdb6000830184611e55565b92915050565b6000604082019050611ff66000830185611e55565b81810360208301526120088184611b8e565b90509392505050565b600060a0820190506120266000830188611e55565b81810360208301526120388187611c00565b9050818103604083015261204c8186611c00565b905061205b6060830185611e55565b818103608083015261206d8184611c00565b90509695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561209c57600080fd5b8060405250919050565b600067ffffffffffffffff8211156120bd57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061214e82612161565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156121b857808201518184015260208101905061219d565b838111156121c7576000848401525b50505050565b6000601f19601f8301169050919050565b6121e781612143565b81146121f257600080fd5b50565b6121fe81612181565b811461220957600080fd5b5056fea365627a7a72315820cabac3fb909e86a759a83ad92170b12146cdab29e47fa21799f355d729fd03336c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063a87430ba1161008a578063e0391b0911610059578063e0391b0914610325578063e602eb3d14610350578063f2fde38b14610391578063fb88df18146103ba576100f3565b8063a87430ba14610242578063caa56c6d14610282578063d51fe9cb146102ab578063dd297ce8146102e8576100f3565b806370a08231116100c657806370a0823114610198578063715018a6146101d55780638da5cb5b146101ec5780638f32d59b14610217576100f3565b8063095ea7b3146100f857806322e8c87d1461011457806323b872dd1461013f5780636352211e1461015b575b600080fd5b610112600480360361010d919081019061198d565b6103f7565b005b34801561012057600080fd5b5061012961054a565b6040516101369190611fa4565b60405180910390f35b6101596004803603610154919081019061193e565b6106be565b005b34801561016757600080fd5b50610182600480360361017d9190810190611aa0565b61083f565b60405161018f9190611e64565b60405180910390f35b3480156101a457600080fd5b506101bf60048036036101ba9190810190611915565b61087b565b6040516101cc9190611fc6565b60405180910390f35b3480156101e157600080fd5b506101ea6108c4565b005b3480156101f857600080fd5b50610201610996565b60405161020e9190611e64565b60405180910390f35b34801561022357600080fd5b5061022c6109c0565b6040516102399190611ea1565b60405180910390f35b34801561024e57600080fd5b5061026960048036036102649190810190611915565b610a18565b6040516102799493929190611ebc565b60405180910390f35b34801561028e57600080fd5b506102a960048036036102a491908101906119c9565b610b0d565b005b3480156102b757600080fd5b506102d260048036036102cd9190810190611aa0565b610bb7565b6040516102df9190611e64565b60405180910390f35b3480156102f457600080fd5b5061030f600480360361030a9190810190611aa0565b610bea565b60405161031c9190611e64565b60405180910390f35b34801561033157600080fd5b5061033a610c1d565b6040516103479190611e7f565b60405180910390f35b34801561035c57600080fd5b5061037760048036036103729190810190611aa0565b610e76565b604051610388959493929190612011565b60405180910390f35b34801561039d57600080fd5b506103b860048036036103b39190810190611915565b611081565b005b3480156103c657600080fd5b506103e160048036036103dc9190810190611915565b61109e565b6040516103ee9190611fc6565b60405180910390f35b8060008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f90611f56565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6105526117b2565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b34600382815481106106cc57fe5b906000526020600020906005020160030154148061074857503373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611f08565b60405180910390fd5b6107928383836110b6565b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156107dd573d6000803e3d6000fd5b50818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108cc6109c0565b6108d557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6005602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b9b57600080fd5b610ba481611236565b610bb085858585611314565b5050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610e6d57838290600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d075780601f10610cdc57610100808354040283529160200191610d07565b820191906000526020600020905b815481529060010190602001808311610cea57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610da95780601f10610d7e57610100808354040283529160200191610da9565b820191906000526020600020905b815481529060010190602001808311610d8c57829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e555780601f10610e2a57610100808354040283529160200191610e55565b820191906000526020600020905b815481529060010190602001808311610e3857829003601f168201915b50505050508152505081526020019060010190610c41565b50505050905090565b60038181548110610e8357fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f355780601f10610f0a57610100808354040283529160200191610f35565b820191906000526020600020905b815481529060010190602001808311610f1857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd35780601f10610fa857610100808354040283529160200191610fd3565b820191906000526020600020905b815481529060010190602001808311610fb657829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110775780601f1061104c57610100808354040283529160200191611077565b820191906000526020600020905b81548152906001019060200180831161105a57829003601f168201915b5050505050905085565b6110896109c0565b61109257600080fd5b61109b81611526565b50565b60016020528060005260406000206000915090505481565b61110860018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061119d60018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461163c90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60001515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16151514156112d85761129b81611653565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c9060016040516112cb9190611f76565b60405180910390a1611311565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c9060006040516113089190611f28565b60405180910390a15b50565b6000600160036040518060a001604052806000815260200188815260200186815260200187815260200185815250908060018154018082558091505090600182039060005260206000209060050201600090919290919091506000820151816000015560208201518160010190805190602001906113939291906117f2565b5060408201518160020190805190602001906113b09291906117f2565b506060820151816003015560808201518160040190805190602001906113d79291906117f2565b50505003905080600382815481106113eb57fe5b9060005260206000209060050201600001819055503360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114a360018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461162090919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff3516922ab7b85da7be501737934fc735e896c9a5685afafa68a7680ba6feed08186604051611517929190611fe1565b60405180910390a15050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561156057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101561163257fe5b8091505092915050565b60008282111561164857fe5b818303905092915050565b61165b6117b2565b6040518060800160405280838152602001600115158152602001600481526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906116f49291906117f2565b5060208201518160010160006101000a81548160ff0219169083151502179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405180608001604052806060815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061183357805160ff1916838001178555611861565b82800160010185558215611861579182015b82811115611860578251825591602001919060010190611845565b5b50905061186e9190611872565b5090565b61189491905b80821115611890576000816000905550600101611878565b5090565b90565b6000813590506118a6816121de565b92915050565b600082601f8301126118bd57600080fd5b81356118d06118cb826120a6565b612079565b915080825260208301602083018583830111156118ec57600080fd5b6118f783828461218b565b50505092915050565b60008135905061190f816121f5565b92915050565b60006020828403121561192757600080fd5b600061193584828501611897565b91505092915050565b60008060006060848603121561195357600080fd5b600061196186828701611897565b935050602061197286828701611897565b925050604061198386828701611900565b9150509250925092565b600080604083850312156119a057600080fd5b60006119ae85828601611897565b92505060206119bf85828601611900565b9150509250929050565b600080600080600060a086880312156119e157600080fd5b600086013567ffffffffffffffff8111156119fb57600080fd5b611a07888289016118ac565b9550506020611a1888828901611900565b945050604086013567ffffffffffffffff811115611a3557600080fd5b611a41888289016118ac565b935050606086013567ffffffffffffffff811115611a5e57600080fd5b611a6a888289016118ac565b925050608086013567ffffffffffffffff811115611a8757600080fd5b611a93888289016118ac565b9150509295509295909350565b600060208284031215611ab257600080fd5b6000611ac084828501611900565b91505092915050565b6000611ad58383611d5f565b905092915050565b611ae681612143565b82525050565b611af581612143565b82525050565b6000611b06826120e2565b611b108185612110565b935083602082028501611b22856120d2565b8060005b85811015611b5e5784840389528151611b3f8582611ac9565b9450611b4a83612103565b925060208a01995050600181019050611b26565b50829750879550505050505092915050565b611b7981612155565b82525050565b611b8881612155565b82525050565b6000611b99826120f8565b611ba38185612132565b9350611bb381856020860161219a565b611bbc816121cd565b840191505092915050565b6000611bd2826120ed565b611bdc8185612121565b9350611bec81856020860161219a565b611bf5816121cd565b840191505092915050565b6000611c0b826120ed565b611c158185612132565b9350611c2581856020860161219a565b611c2e816121cd565b840191505092915050565b6000611c46602e83612132565b91507f596f7520646f6e2774206861766520656e6f7567682066756e647320666f722060008301527f74686973207472616e73666572210000000000000000000000000000000000006020830152604082019050919050565b6000611cac600d83612132565b91507f55736572206578697374732021000000000000000000000000000000000000006000830152602082019050919050565b6000611cec601783612132565b91507f596f7520617265206e6f7420746865206f776e657220210000000000000000006000830152602082019050919050565b6000611d2c601183612132565b91507f4e657720557365722043726561746564210000000000000000000000000000006000830152602082019050919050565b600060a083016000830151611d776000860182611e46565b5060208301518482036020860152611d8f8282611bc7565b91505060408301518482036040860152611da98282611bc7565b9150506060830151611dbe6060860182611e46565b5060808301518482036080860152611dd68282611bc7565b9150508091505092915050565b60006080830160008301518482036000860152611e008282611bc7565b9150506020830151611e156020860182611b70565b506040830151611e286040860182611e46565b506060830151611e3b6060860182611add565b508091505092915050565b611e4f81612181565b82525050565b611e5e81612181565b82525050565b6000602082019050611e796000830184611aec565b92915050565b60006020820190508181036000830152611e998184611afb565b905092915050565b6000602082019050611eb66000830184611b7f565b92915050565b60006080820190508181036000830152611ed68187611c00565b9050611ee56020830186611b7f565b611ef26040830185611e55565b611eff6060830184611aec565b95945050505050565b60006020820190508181036000830152611f2181611c39565b9050919050565b60006040820190508181036000830152611f4181611c9f565b9050611f506020830184611b7f565b92915050565b60006020820190508181036000830152611f6f81611cdf565b9050919050565b60006040820190508181036000830152611f8f81611d1f565b9050611f9e6020830184611b7f565b92915050565b60006020820190508181036000830152611fbe8184611de3565b905092915050565b6000602082019050611fdb6000830184611e55565b92915050565b6000604082019050611ff66000830185611e55565b81810360208301526120088184611b8e565b90509392505050565b600060a0820190506120266000830188611e55565b81810360208301526120388187611c00565b9050818103604083015261204c8186611c00565b905061205b6060830185611e55565b818103608083015261206d8184611c00565b90509695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561209c57600080fd5b8060405250919050565b600067ffffffffffffffff8211156120bd57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061214e82612161565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156121b857808201518184015260208101905061219d565b838111156121c7576000848401525b50505050565b6000601f19601f8301169050919050565b6121e781612143565b81146121f257600080fd5b50565b6121fe81612181565b811461220957600080fd5b5056fea365627a7a72315820cabac3fb909e86a759a83ad92170b12146cdab29e47fa21799f355d729fd03336c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "120:2285:4:-;;;540:10:2;531:6;;:19;;;;;;;;;;;;;;;;;;595:6;;;;;;;;;;;562:40;;591:1;562:40;;;;;;;;;;;;120:2285:4;;;;;;",
  "deployedSourceMap": "120:2285:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3373:235:1;;;;;;;;;;;;;;;;:::i;:::-;;1046:138:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1046:138:4;;;:::i;:::-;;;;;;;;;;;;;;;;2323:1042:1;;;;;;;;;;;;;;;;:::i;:::-;;2204:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2204:111:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2082:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2082:114:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1316:130:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:130:2;;;:::i;:::-;;666:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:72:2;;;:::i;:::-;;;;;;;;;;;;;;;;964:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:85:2;;;:::i;:::-;;;;;;;;;;;;;;;;599:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:41:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1862:540;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1862:540:4;;;;;;;;;;;;;;;;:::i;:::-;;559:43:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:43:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;664:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;664:47:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3616:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3616:93:1;;;:::i;:::-;;;;;;;;;;;;;;;;720:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;720:21:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1610:103:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1610:103:2;;;;;;;;;;;;;;;;:::i;:::-;;609:48:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:48:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3373:235;3483:8;855;:16;864:6;855:16;;;;;;;;;;;;;;;;;;;;;841:30;;:10;:30;;;833:65;;;;;;;;;;;;;;;;;;;;;;3534:9;3509:12;:22;3522:8;3509:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3591:8;3580:9;3559:41;;3568:10;3559:41;;;;;;;;;;;;3373:235;;;:::o;1046:138:4:-;1117:15;;:::i;:::-;1158:5;:17;1164:10;1158:17;;;;;;;;;;;;;;;1150:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1046:138;:::o;2323:1042:1:-;2679:9;2651:8;2660;2651:18;;;;;;;;;;;;;;;;;;:24;;;:37;:77;;;;2718:10;2692:36;;:12;:22;2705:8;2692:22;;;;;;;;;;;;;;;;;;;;;:36;;;2651:77;2629:177;;;;;;;;;;;;;;;;;;;;;;2868:34;2881:5;2888:3;2893:8;2868:12;:34::i;:::-;3060:32;3111:5;3060:58;;3185:16;:25;;:36;3211:9;3185:36;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3185:36:1;3348:8;3343:3;3327:30;;3336:5;3327:30;;;;;;;;;;;;2323:1042;;;;:::o;2204:111::-;2262:7;2289:8;:18;2298:8;2289:18;;;;;;;;;;;;;;;;;;;;;2282:25;;2204:111;;;:::o;2082:114::-;2140:7;2167:13;:21;2181:6;2167:21;;;;;;;;;;;;;;;;2160:28;;2082:114;;;:::o;1316:130:2:-;857:9;:7;:9::i;:::-;849:18;;;;;;1411:1;1374:40;;1395:6;;;;;;;;;;;1374:40;;;;;;;;;;;;1438:1;1421:6;;:19;;;;;;;;;;;;;;;;;;1316:130::o;666:72::-;703:7;726:6;;;;;;;;;;;719:13;;666:72;:::o;964:85::-;1003:4;1037:6;;;;;;;;;;;1023:20;;:10;:20;;;1016:27;;964:85;:::o;599:41:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1862:540::-;2256:5;:17;2262:10;2256:17;;;;;;;;;;;;;;;:30;;;2227:13;:25;2241:10;2227:25;;;;;;;;;;;;;;;;:59;;2219:68;;;;;;2300:28;2319:8;2300:18;:28::i;:::-;2343:51;2360:4;2366:5;2373:8;2383:10;2343:16;:51::i;:::-;1862:540;;;;;:::o;559:43:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;664:47::-;;;;;;;;;;;;;;;;;;;;;;:::oo;720:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1610:103:2:-;857:9;:7;:9::i;:::-;849:18;;;;;;1679:28;1698:8;1679:18;:28::i;:::-;1610:103;:::o;609:48:1:-;;;;;;;;;;;;;;;;;:::o;1625:449::-;1824:25;1847:1;1824:13;:18;1838:3;1824:18;;;;;;;;;;;;;;;;:22;;:25;;;;:::i;:::-;1803:13;:18;1817:3;1803:18;;;;;;;;;;;;;;;:46;;;;1942:27;1967:1;1942:13;:20;1956:5;1942:20;;;;;;;;;;;;;;;;:24;;:27;;;;:::i;:::-;1919:13;:20;1933:5;1919:20;;;;;;;;;;;;;;;:50;;;;2063:3;2042:8;:18;2051:8;2042:18;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1625:449;;;:::o;1409:344:4:-;1513:5;1486:32;;:5;:17;1492:10;1486:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;1482:254;;;1535:18;1547:5;1535:11;:18::i;:::-;1575:43;1613:4;1575:43;;;;;;;;;;;;;;;1482:254;;;1682:40;1716:5;1682:40;;;;;;;;;;;;;;;1482:254;1409:344;:::o;926:691:1:-;1312:13;1411:1;1328:8;1356:41;;;;;;;;1360:1;1356:41;;;;1363:4;1356:41;;;;1369:8;1356:41;;;;1379:5;1356:41;;;;1386:10;1356:41;;;1328:80;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1328:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:84;1312:100;;1446:5;1425:8;1434:5;1425:15;;;;;;;;;;;;;;;;;;:18;;:26;;;;1482:10;1464:8;:15;1473:5;1464:15;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1533:32;1563:1;1533:13;:25;1547:10;1533:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;1505:13;:25;1519:10;1505:25;;;;;;;;;;;;;;;:60;;;;1583:26;1597:5;1604:4;1583:26;;;;;;;;;;;;;;;;926:691;;;;;:::o;1850:173:2:-;1940:1;1920:22;;:8;:22;;;;1912:31;;;;;;1984:8;1955:38;;1976:6;;;;;;;;;;;1955:38;;;;;;;;;;;;2009:8;2000:6;;:17;;;;;;;;;;;;;;;;;;1850:173;:::o;1054:133:3:-;1112:7;1128:9;1144:1;1140;:5;1128:17;;1164:1;1159;:6;;1152:14;;;;1180:1;1173:8;;;1054:133;;;;:::o;874:113::-;932:7;960:1;955;:6;;948:14;;;;980:1;976;:5;969:12;;874:113;;;;:::o;752:208:4:-;815:20;;:::i;:::-;838:33;;;;;;;;847:5;838:33;;;;853:4;838:33;;;;;;858:1;838:33;;;;860:10;838:33;;;;;815:56;;904:4;884:5;:17;890:10;884:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:1;921:13;:25;935:10;921:25;;;;;;;;;;;;;;;:29;;;;752:208;;:::o;120:2285::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:491;;;;1116:2;1104:9;1095:7;1091:23;1087:32;1084:2;;;1132:1;1129;1122:12;1084:2;1167:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;;;1174:63;;1146:97;1274:2;1292:53;1337:7;1328:6;1317:9;1313:22;1292:53;;;1282:63;;1253:98;1382:2;1400:53;1445:7;1436:6;1425:9;1421:22;1400:53;;;1390:63;;1361:98;1078:391;;;;;;1476:366;;;1597:2;1585:9;1576:7;1572:23;1568:32;1565:2;;;1613:1;1610;1603:12;1565:2;1648:1;1665:53;1710:7;1701:6;1690:9;1686:22;1665:53;;;1655:63;;1627:97;1755:2;1773:53;1818:7;1809:6;1798:9;1794:22;1773:53;;;1763:63;;1734:98;1559:283;;;;;;1849:1167;;;;;;2061:3;2049:9;2040:7;2036:23;2032:33;2029:2;;;2078:1;2075;2068:12;2029:2;2141:1;2130:9;2126:17;2113:31;2164:18;2156:6;2153:30;2150:2;;;2196:1;2193;2186:12;2150:2;2216:63;2271:7;2262:6;2251:9;2247:22;2216:63;;;2206:73;;2092:193;2316:2;2334:53;2379:7;2370:6;2359:9;2355:22;2334:53;;;2324:63;;2295:98;2452:2;2441:9;2437:18;2424:32;2476:18;2468:6;2465:30;2462:2;;;2508:1;2505;2498:12;2462:2;2528:63;2583:7;2574:6;2563:9;2559:22;2528:63;;;2518:73;;2403:194;2656:2;2645:9;2641:18;2628:32;2680:18;2672:6;2669:30;2666:2;;;2712:1;2709;2702:12;2666:2;2732:63;2787:7;2778:6;2767:9;2763:22;2732:63;;;2722:73;;2607:194;2860:3;2849:9;2845:19;2832:33;2885:18;2877:6;2874:30;2871:2;;;2917:1;2914;2907:12;2871:2;2937:63;2992:7;2983:6;2972:9;2968:22;2937:63;;;2927:73;;2811:195;2023:993;;;;;;;;;3023:241;;3127:2;3115:9;3106:7;3102:23;3098:32;3095:2;;;3143:1;3140;3133:12;3095:2;3178:1;3195:53;3240:7;3231:6;3220:9;3216:22;3195:53;;;3185:63;;3157:97;3089:175;;;;;3272:217;;3403:80;3479:3;3471:6;3403:80;;;3389:94;;3382:107;;;;;3497:103;3570:24;3588:5;3570:24;;;3565:3;3558:37;3552:48;;;3607:113;3690:24;3708:5;3690:24;;;3685:3;3678:37;3672:48;;;3772:968;;3947:69;4010:5;3947:69;;;4029:101;4123:6;4118:3;4029:101;;;4022:108;;4153:3;4195:4;4187:6;4183:17;4178:3;4174:27;4222:71;4287:5;4222:71;;;4313:7;4341:1;4326:375;4351:6;4348:1;4345:13;4326:375;;;4413:9;4407:4;4403:20;4398:3;4391:33;4458:6;4452:13;4480:94;4569:4;4554:13;4480:94;;;4472:102;;4591:75;4659:6;4591:75;;;4581:85;;4689:4;4684:3;4680:14;4673:21;;4383:318;4373:1;4370;4366:9;4361:14;;4326:375;;;4330:14;4714:4;4707:11;;4731:3;4724:10;;3926:814;;;;;;;;;;4748:94;4815:21;4830:5;4815:21;;;4810:3;4803:34;4797:45;;;4849:104;4926:21;4941:5;4926:21;;;4921:3;4914:34;4908:45;;;4960:347;;5072:39;5105:5;5072:39;;;5123:71;5187:6;5182:3;5123:71;;;5116:78;;5199:52;5244:6;5239:3;5232:4;5225:5;5221:16;5199:52;;;5272:29;5294:6;5272:29;;;5267:3;5263:39;5256:46;;5052:255;;;;;;5314:319;;5412:35;5441:5;5412:35;;;5459:61;5513:6;5508:3;5459:61;;;5452:68;;5525:52;5570:6;5565:3;5558:4;5551:5;5547:16;5525:52;;;5598:29;5620:6;5598:29;;;5593:3;5589:39;5582:46;;5392:241;;;;;;5640:339;;5748:35;5777:5;5748:35;;;5795:71;5859:6;5854:3;5795:71;;;5788:78;;5871:52;5916:6;5911:3;5904:4;5897:5;5893:16;5871:52;;;5944:29;5966:6;5944:29;;;5939:3;5935:39;5928:46;;5728:251;;;;;;5987:383;;6147:67;6211:2;6206:3;6147:67;;;6140:74;;6247:34;6243:1;6238:3;6234:11;6227:55;6316:16;6311:2;6306:3;6302:12;6295:38;6361:2;6356:3;6352:12;6345:19;;6133:237;;;;6379:313;;6539:67;6603:2;6598:3;6539:67;;;6532:74;;6639:15;6635:1;6630:3;6626:11;6619:36;6683:2;6678:3;6674:12;6667:19;;6525:167;;;;6701:323;;6861:67;6925:2;6920:3;6861:67;;;6854:74;;6961:25;6957:1;6952:3;6948:11;6941:46;7015:2;7010:3;7006:12;6999:19;;6847:177;;;;7033:317;;7193:67;7257:2;7252:3;7193:67;;;7186:74;;7293:19;7289:1;7284:3;7280:11;7273:40;7341:2;7336:3;7332:12;7325:19;;7179:171;;;;7397:1159;;7522:4;7517:3;7513:14;7603:4;7596:5;7592:16;7586:23;7615:63;7672:4;7667:3;7663:14;7649:12;7615:63;;;7542:142;7757:4;7750:5;7746:16;7740:23;7809:3;7803:4;7799:14;7792:4;7787:3;7783:14;7776:38;7829:69;7893:4;7879:12;7829:69;;;7821:77;;7694:216;7990:4;7983:5;7979:16;7973:23;8042:3;8036:4;8032:14;8025:4;8020:3;8016:14;8009:38;8062:69;8126:4;8112:12;8062:69;;;8054:77;;7920:223;8217:4;8210:5;8206:16;8200:23;8229:63;8286:4;8281:3;8277:14;8263:12;8229:63;;;8153:145;8377:4;8370:5;8366:16;8360:23;8429:3;8423:4;8419:14;8412:4;8407:3;8403:14;8396:38;8449:69;8513:4;8499:12;8449:69;;;8441:77;;8308:222;8547:4;8540:11;;7495:1061;;;;;;8614:885;;8765:4;8760:3;8756:14;8852:4;8845:5;8841:16;8835:23;8904:3;8898:4;8894:14;8887:4;8882:3;8878:14;8871:38;8924:69;8988:4;8974:12;8924:69;;;8916:77;;8785:220;9079:4;9072:5;9068:16;9062:23;9091:57;9142:4;9137:3;9133:14;9119:12;9091:57;;;9015:139;9235:4;9228:5;9224:16;9218:23;9247:63;9304:4;9299:3;9295:14;9281:12;9247:63;;;9164:152;9392:4;9385:5;9381:16;9375:23;9404:63;9461:4;9456:3;9452:14;9438:12;9404:63;;;9326:147;9490:4;9483:11;;8738:761;;;;;;9506:103;9579:24;9597:5;9579:24;;;9574:3;9567:37;9561:48;;;9616:113;9699:24;9717:5;9699:24;;;9694:3;9687:37;9681:48;;;9736:213;;9854:2;9843:9;9839:18;9831:26;;9868:71;9936:1;9925:9;9921:17;9912:6;9868:71;;;9825:124;;;;;9956:421;;10154:2;10143:9;10139:18;10131:26;;10204:9;10198:4;10194:20;10190:1;10179:9;10175:17;10168:47;10229:138;10362:4;10353:6;10229:138;;;10221:146;;10125:252;;;;;10384:201;;10496:2;10485:9;10481:18;10473:26;;10510:65;10572:1;10561:9;10557:17;10548:6;10510:65;;;10467:118;;;;;10592:615;;10804:3;10793:9;10789:19;10781:27;;10855:9;10849:4;10845:20;10841:1;10830:9;10826:17;10819:47;10880:74;10949:4;10940:6;10880:74;;;10872:82;;10965:66;11027:2;11016:9;11012:18;11003:6;10965:66;;;11042:72;11110:2;11099:9;11095:18;11086:6;11042:72;;;11125;11193:2;11182:9;11178:18;11169:6;11125:72;;;10775:432;;;;;;;;11214:407;;11405:2;11394:9;11390:18;11382:26;;11455:9;11449:4;11445:20;11441:1;11430:9;11426:17;11419:47;11480:131;11606:4;11480:131;;;11472:139;;11376:245;;;;11628:506;;11841:2;11830:9;11826:18;11818:26;;11891:9;11885:4;11881:20;11877:1;11866:9;11862:17;11855:47;11916:131;12042:4;11916:131;;;11908:139;;12058:66;12120:2;12109:9;12105:18;12096:6;12058:66;;;11812:322;;;;;12141:407;;12332:2;12321:9;12317:18;12309:26;;12382:9;12376:4;12372:20;12368:1;12357:9;12353:17;12346:47;12407:131;12533:4;12407:131;;;12399:139;;12303:245;;;;12555:506;;12768:2;12757:9;12753:18;12745:26;;12818:9;12812:4;12808:20;12804:1;12793:9;12789:17;12782:47;12843:131;12969:4;12843:131;;;12835:139;;12985:66;13047:2;13036:9;13032:18;13023:6;12985:66;;;12739:322;;;;;13068:361;;13236:2;13225:9;13221:18;13213:26;;13286:9;13280:4;13276:20;13272:1;13261:9;13257:17;13250:47;13311:108;13414:4;13405:6;13311:108;;;13303:116;;13207:222;;;;;13436:213;;13554:2;13543:9;13539:18;13531:26;;13568:71;13636:1;13625:9;13621:17;13612:6;13568:71;;;13525:124;;;;;13656:412;;13822:2;13811:9;13807:18;13799:26;;13836:71;13904:1;13893:9;13889:17;13880:6;13836:71;;;13955:9;13949:4;13945:20;13940:2;13929:9;13925:18;13918:48;13980:78;14053:4;14044:6;13980:78;;;13972:86;;13793:275;;;;;;14075:899;;14353:3;14342:9;14338:19;14330:27;;14368:71;14436:1;14425:9;14421:17;14412:6;14368:71;;;14487:9;14481:4;14477:20;14472:2;14461:9;14457:18;14450:48;14512:74;14581:4;14572:6;14512:74;;;14504:82;;14634:9;14628:4;14624:20;14619:2;14608:9;14604:18;14597:48;14659:74;14728:4;14719:6;14659:74;;;14651:82;;14744:72;14812:2;14801:9;14797:18;14788:6;14744:72;;;14865:9;14859:4;14855:20;14849:3;14838:9;14834:19;14827:49;14890:74;14959:4;14950:6;14890:74;;;14882:82;;14324:650;;;;;;;;;14981:256;;15043:2;15037:9;15027:19;;15081:4;15073:6;15069:17;15180:6;15168:10;15165:22;15144:18;15132:10;15129:34;15126:62;15123:2;;;15201:1;15198;15191:12;15123:2;15221:10;15217:2;15210:22;15021:216;;;;;15244:322;;15388:18;15380:6;15377:30;15374:2;;;15420:1;15417;15410:12;15374:2;15487:4;15483:9;15476:4;15468:6;15464:17;15460:33;15452:41;;15551:4;15545;15541:15;15533:23;;15311:255;;;;15573:166;;15674:3;15666:11;;15712:4;15707:3;15703:14;15695:22;;15660:79;;;;15746:152;;15870:5;15864:12;15854:22;;15835:63;;;;15905:118;;15995:5;15989:12;15979:22;;15960:63;;;;16030:122;;16124:5;16118:12;16108:22;;16089:63;;;;16159:123;;16272:4;16267:3;16263:14;16255:22;;16249:33;;;;16290:193;;16435:6;16430:3;16423:19;16472:4;16467:3;16463:14;16448:29;;16416:67;;;;;16492:153;;16597:6;16592:3;16585:19;16634:4;16629:3;16625:14;16610:29;;16578:67;;;;;16654:163;;16769:6;16764:3;16757:19;16806:4;16801:3;16797:14;16782:29;;16750:67;;;;;16825:91;;16887:24;16905:5;16887:24;;;16876:35;;16870:46;;;;16923:85;;16996:5;16989:13;16982:21;16971:32;;16965:43;;;;17015:121;;17088:42;17081:5;17077:54;17066:65;;17060:76;;;;17143:72;;17205:5;17194:16;;17188:27;;;;17223:145;17304:6;17299:3;17294;17281:30;17360:1;17351:6;17346:3;17342:16;17335:27;17274:94;;;;17377:268;17442:1;17449:101;17463:6;17460:1;17457:13;17449:101;;;17539:1;17534:3;17530:11;17524:18;17520:1;17515:3;17511:11;17504:39;17485:2;17482:1;17478:10;17473:15;;17449:101;;;17565:6;17562:1;17559:13;17556:2;;;17630:1;17621:6;17616:3;17612:16;17605:27;17556:2;17426:219;;;;;17653:97;;17741:2;17737:7;17732:2;17725:5;17721:14;17717:28;17707:38;;17701:49;;;;17758:117;17827:24;17845:5;17827:24;;;17820:5;17817:35;17807:2;;17866:1;17863;17856:12;17807:2;17801:74;;17882:117;17951:24;17969:5;17951:24;;;17944:5;17941:35;17931:2;;17990:1;17987;17980:12;17931:2;17925:74;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./nft.sol\";\r\nimport \"./ownable.sol\";\r\n\r\n\r\ncontract User is NFT, Ownable{\r\n\r\n\r\n    event UserCreatedStatus(string stateMsg,bool result);\r\n\r\n    // user data structure\r\n    struct UserData {\r\n        string userName; // a user nickname\r\n\r\n        // Useful for checking if an object already exist in users. Must be set to true at UserData object creation time.\r\n        bool exist; \r\n        uint256 mintingLimit;\r\n        address account;\r\n    }\r\n\r\n    // mapping to store a User object for the user that created it.\r\n    mapping(address => UserData) public users;\r\n\r\n    /**\r\n     *\r\n     * @dev Function to create a new user and add them to the users mapping\r\n     */\r\n    function _createUser(string memory _name) private {\r\n\r\n        UserData memory user = UserData(_name,true,4,msg.sender);\r\n\r\n        users[msg.sender] = user;\r\n\r\n        ownerNFTCount[msg.sender] = 0;\r\n\r\n    }\r\n\r\n    /**\r\n\r\n     * @dev Function to retrieve an existing user data\r\n     */\r\n\r\n    function getUserData()\r\n        public\r\n        view\r\n        returns (UserData memory)\r\n    {\r\n        return (users[msg.sender]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @dev Function to create a new user and add them to the users mapping if they don't exist\r\n     * @return true if the user was added\r\n     * @return false if the user already exists\r\n     */\r\n\r\n    function CheckAndCreateUser(string memory _name) private  {\r\n\r\n\r\n        if (users[msg.sender].exist == false) {\r\n            _createUser(_name);\r\n\r\n            emit UserCreatedStatus(\"New User Created!\",true);\r\n         \r\n        } else {\r\n            \r\n             emit UserCreatedStatus(\"User exists !\",false);\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     *\r\n     * @dev Function to create a new NFT for a user calling this function\r\n     */\r\n    function createNewNFT(\r\n        string memory name,\r\n        uint256 value, \r\n        string memory category,\r\n        string memory artFileUrl,\r\n        string memory userName\r\n    ) public {\r\n        // make sure the user hasn't passed the limit of how many NFTs they can mint\r\n        // the limit can be adjust later based on the user activity\r\n        require(ownerNFTCount[msg.sender] <= users[msg.sender].mintingLimit);\r\n\r\n        CheckAndCreateUser(userName);\r\n\r\n\r\n        _mintERC721Token(name, value, category, artFileUrl);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\aelaal01\\source\\repos\\GRAD-ETH-PROJ\\solidity_contracts\\contracts\\user.sol",
  "ast": {
    "absolutePath": "project:/contracts/user.sol",
    "exportedSymbols": {
      "User": [
        662
      ]
    },
    "id": 663,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 525,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:4"
      },
      {
        "id": 526,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:4"
      },
      {
        "absolutePath": "project:/contracts/nft.sol",
        "file": "./nft.sol",
        "id": 527,
        "nodeType": "ImportDirective",
        "scope": 663,
        "sourceUnit": 317,
        "src": "70:19:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownable.sol",
        "file": "./ownable.sol",
        "id": 528,
        "nodeType": "ImportDirective",
        "scope": 663,
        "sourceUnit": 426,
        "src": "91:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 529,
              "name": "NFT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 316,
              "src": "137:3:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$316",
                "typeString": "contract NFT"
              }
            },
            "id": 530,
            "nodeType": "InheritanceSpecifier",
            "src": "137:3:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 531,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 425,
              "src": "142:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$425",
                "typeString": "contract Ownable"
              }
            },
            "id": 532,
            "nodeType": "InheritanceSpecifier",
            "src": "142:7:4"
          }
        ],
        "contractDependencies": [
          48,
          316,
          425
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 662,
        "linearizedBaseContracts": [
          662,
          425,
          316,
          48
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 538,
            "name": "UserCreatedStatus",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "indexed": false,
                  "name": "stateMsg",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "184:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "200:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:29:4"
            },
            "src": "160:53:4"
          },
          {
            "canonicalName": "User.UserData",
            "id": 547,
            "members": [
              {
                "constant": false,
                "id": 540,
                "name": "userName",
                "nodeType": "VariableDeclaration",
                "scope": 547,
                "src": "276:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 539,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 542,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 547,
                "src": "446:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 541,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 544,
                "name": "mintingLimit",
                "nodeType": "VariableDeclaration",
                "scope": 547,
                "src": "468:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 543,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "468:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 546,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 547,
                "src": "499:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 545,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "499:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserData",
            "nodeType": "StructDefinition",
            "scope": 662,
            "src": "249:273:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 551,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "599:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$547_storage_$",
              "typeString": "mapping(address => struct User.UserData)"
            },
            "typeName": {
              "id": 550,
              "keyType": {
                "id": 548,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "607:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "599:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$547_storage_$",
                "typeString": "mapping(address => struct User.UserData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 549,
                "name": "UserData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 547,
                "src": "618:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserData_$547_storage_ptr",
                  "typeString": "struct User.UserData"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "802:158:4",
              "statements": [
                {
                  "assignments": [
                    557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 557,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "815:20:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$547_memory_ptr",
                        "typeString": "struct User.UserData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 556,
                        "name": "UserData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 547,
                        "src": "815:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$547_storage_ptr",
                          "typeString": "struct User.UserData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "847:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "853:4:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "860:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "860:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 558,
                      "name": "UserData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "838:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserData_$547_storage_ptr_$",
                        "typeString": "type(struct User.UserData storage pointer)"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$547_memory",
                      "typeString": "struct User.UserData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "815:56:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 566,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "884:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$547_storage_$",
                          "typeString": "mapping(address => struct User.UserData storage ref)"
                        }
                      },
                      "id": 569,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "890:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "890:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "884:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$547_storage",
                        "typeString": "struct User.UserData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "904:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$547_memory_ptr",
                        "typeString": "struct User.UserData memory"
                      }
                    },
                    "src": "884:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$547_storage",
                      "typeString": "struct User.UserData storage ref"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "884:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "ownerNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "921:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 576,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 574,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "935:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "935:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "921:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "949:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "921:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "921:29:4"
                }
              ]
            },
            "documentation": "\n     * @dev Function to create a new user and add them to the users mapping",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "773:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:21:4"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:4"
            },
            "scope": 662,
            "src": "752:208:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "1139:45:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 586,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "1158:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$547_storage_$",
                            "typeString": "mapping(address => struct User.UserData storage ref)"
                          }
                        },
                        "id": 589,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 587,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "1164:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1164:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1158:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$547_storage",
                          "typeString": "struct User.UserData storage ref"
                        }
                      }
                    ],
                    "id": 590,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1157:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$547_storage",
                      "typeString": "struct User.UserData storage ref"
                    }
                  },
                  "functionReturnParameters": 585,
                  "id": 591,
                  "nodeType": "Return",
                  "src": "1150:26:4"
                }
              ]
            },
            "documentation": "@dev Function to retrieve an existing user data",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:2:4"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "1117:15:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserData_$547_memory_ptr",
                    "typeString": "struct User.UserData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 583,
                    "name": "UserData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 547,
                    "src": "1117:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$547_storage_ptr",
                      "typeString": "struct User.UserData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1116:17:4"
            },
            "scope": 662,
            "src": "1046:138:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1467:286:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 598,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "1486:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$547_storage_$",
                            "typeString": "mapping(address => struct User.UserData storage ref)"
                          }
                        },
                        "id": 601,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "1492:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1492:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1486:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$547_storage",
                          "typeString": "struct User.UserData storage ref"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 542,
                      "src": "1486:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1513:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1486:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 620,
                    "nodeType": "Block",
                    "src": "1647:89:4",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55736572206578697374732021",
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1700:15:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_95da09840e517bc488ba910267604a2fd6fa7f7915e2e0606439e56073ddecf1",
                                "typeString": "literal_string \"User exists !\""
                              },
                              "value": "User exists !"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1716:5:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_95da09840e517bc488ba910267604a2fd6fa7f7915e2e0606439e56073ddecf1",
                                "typeString": "literal_string \"User exists !\""
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 615,
                            "name": "UserCreatedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "1682:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (string memory,bool)"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1682:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 619,
                        "nodeType": "EmitStatement",
                        "src": "1677:45:4"
                      }
                    ]
                  },
                  "id": 621,
                  "nodeType": "IfStatement",
                  "src": "1482:254:4",
                  "trueBody": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "1520:121:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 606,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "1547:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 605,
                            "name": "_createUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "1535:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1535:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "1535:18:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4e65772055736572204372656174656421",
                              "id": 610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1593:19:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fcf45b15b07ae73a71799631d6f5477f8e0fa936e68d45ba3e9a952444dbe32e",
                                "typeString": "literal_string \"New User Created!\""
                              },
                              "value": "New User Created!"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1613:4:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fcf45b15b07ae73a71799631d6f5477f8e0fa936e68d45ba3e9a952444dbe32e",
                                "typeString": "literal_string \"New User Created!\""
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 609,
                            "name": "UserCreatedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "1575:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (string memory,bool)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1575:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 613,
                        "nodeType": "EmitStatement",
                        "src": "1570:48:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "\n     * @dev Function to create a new user and add them to the users mapping if they don't exist\n@return true if the user was added\n@return false if the user already exists",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CheckAndCreateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1437:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1436:21:4"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1467:0:4"
            },
            "scope": 662,
            "src": "1409:344:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "2053:349:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 637,
                            "name": "ownerNFTCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2227:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 640,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "2241:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2241:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2227:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 641,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "2256:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$547_storage_$",
                                "typeString": "mapping(address => struct User.UserData storage ref)"
                              }
                            },
                            "id": 644,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 642,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 677,
                                "src": "2262:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2262:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2256:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$547_storage",
                              "typeString": "struct User.UserData storage ref"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintingLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 544,
                          "src": "2256:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2227:59:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        680,
                        681
                      ],
                      "referencedDeclaration": 680,
                      "src": "2219:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2319:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 649,
                      "name": "CheckAndCreateUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "2300:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2300:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "2300:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "2360:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "2366:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "2373:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "artFileUrl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "2383:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 653,
                      "name": "_mintERC721Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2343:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,uint256,string memory,string memory)"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2343:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:51:4"
                }
              ]
            },
            "documentation": "\n     * @dev Function to create a new NFT for a user calling this function",
            "id": 661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1894:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1923:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1948:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "name": "artFileUrl",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1981:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "2016:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2016:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1883:162:4"
            },
            "returnParameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2053:0:4"
            },
            "scope": 662,
            "src": "1862:540:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 663,
        "src": "120:2285:4"
      }
    ],
    "src": "0:2407:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/user.sol",
      "exportedSymbols": {
        "User": [
          662
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 525,
        "name": "PragmaDirective",
        "src": "0:31:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 526,
        "name": "PragmaDirective",
        "src": "33:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 317,
          "absolutePath": "project:/contracts/nft.sol",
          "file": "./nft.sol",
          "scope": 663,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 527,
        "name": "ImportDirective",
        "src": "70:19:4"
      },
      {
        "attributes": {
          "SourceUnit": 426,
          "absolutePath": "project:/contracts/ownable.sol",
          "file": "./ownable.sol",
          "scope": 663,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 528,
        "name": "ImportDirective",
        "src": "91:23:4"
      },
      {
        "attributes": {
          "contractDependencies": [
            48,
            316,
            425
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            662,
            425,
            316,
            48
          ],
          "name": "User",
          "scope": 663
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFT",
                  "referencedDeclaration": 316,
                  "type": "contract NFT"
                },
                "id": 529,
                "name": "UserDefinedTypeName",
                "src": "137:3:4"
              }
            ],
            "id": 530,
            "name": "InheritanceSpecifier",
            "src": "137:3:4"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 425,
                  "type": "contract Ownable"
                },
                "id": 531,
                "name": "UserDefinedTypeName",
                "src": "142:7:4"
              }
            ],
            "id": 532,
            "name": "InheritanceSpecifier",
            "src": "142:7:4"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "UserCreatedStatus"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "stateMsg",
                      "scope": 538,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 533,
                        "name": "ElementaryTypeName",
                        "src": "184:6:4"
                      }
                    ],
                    "id": 534,
                    "name": "VariableDeclaration",
                    "src": "184:15:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "result",
                      "scope": 538,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 535,
                        "name": "ElementaryTypeName",
                        "src": "200:4:4"
                      }
                    ],
                    "id": 536,
                    "name": "VariableDeclaration",
                    "src": "200:11:4"
                  }
                ],
                "id": 537,
                "name": "ParameterList",
                "src": "183:29:4"
              }
            ],
            "id": 538,
            "name": "EventDefinition",
            "src": "160:53:4"
          },
          {
            "attributes": {
              "canonicalName": "User.UserData",
              "name": "UserData",
              "scope": 662,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "userName",
                  "scope": 547,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 539,
                    "name": "ElementaryTypeName",
                    "src": "276:6:4"
                  }
                ],
                "id": 540,
                "name": "VariableDeclaration",
                "src": "276:15:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exist",
                  "scope": 547,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 541,
                    "name": "ElementaryTypeName",
                    "src": "446:4:4"
                  }
                ],
                "id": 542,
                "name": "VariableDeclaration",
                "src": "446:10:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "mintingLimit",
                  "scope": 547,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 543,
                    "name": "ElementaryTypeName",
                    "src": "468:7:4"
                  }
                ],
                "id": 544,
                "name": "VariableDeclaration",
                "src": "468:20:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "account",
                  "scope": 547,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 545,
                    "name": "ElementaryTypeName",
                    "src": "499:7:4"
                  }
                ],
                "id": 546,
                "name": "VariableDeclaration",
                "src": "499:15:4"
              }
            ],
            "id": 547,
            "name": "StructDefinition",
            "src": "249:273:4"
          },
          {
            "attributes": {
              "constant": false,
              "name": "users",
              "scope": 662,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct User.UserData)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct User.UserData)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 548,
                    "name": "ElementaryTypeName",
                    "src": "607:7:4"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "UserData",
                      "referencedDeclaration": 547,
                      "type": "struct User.UserData"
                    },
                    "id": 549,
                    "name": "UserDefinedTypeName",
                    "src": "618:8:4"
                  }
                ],
                "id": 550,
                "name": "Mapping",
                "src": "599:28:4"
              }
            ],
            "id": 551,
            "name": "VariableDeclaration",
            "src": "599:41:4"
          },
          {
            "attributes": {
              "documentation": "\n     * @dev Function to create a new user and add them to the users mapping",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_createUser",
              "scope": 662,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 581,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 552,
                        "name": "ElementaryTypeName",
                        "src": "773:6:4"
                      }
                    ],
                    "id": 553,
                    "name": "VariableDeclaration",
                    "src": "773:19:4"
                  }
                ],
                "id": 554,
                "name": "ParameterList",
                "src": "772:21:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 555,
                "name": "ParameterList",
                "src": "802:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        557
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "user",
                          "scope": 580,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct User.UserData",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "UserData",
                              "referencedDeclaration": 547,
                              "type": "struct User.UserData"
                            },
                            "id": 556,
                            "name": "UserDefinedTypeName",
                            "src": "815:8:4"
                          }
                        ],
                        "id": 557,
                        "name": "VariableDeclaration",
                        "src": "815:20:4"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct User.UserData memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 547,
                              "type": "type(struct User.UserData storage pointer)",
                              "value": "UserData"
                            },
                            "id": 558,
                            "name": "Identifier",
                            "src": "838:8:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 553,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 559,
                            "name": "Identifier",
                            "src": "847:5:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 560,
                            "name": "Literal",
                            "src": "853:4:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "34",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 4",
                              "value": "4"
                            },
                            "id": 561,
                            "name": "Literal",
                            "src": "858:1:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 677,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 562,
                                "name": "Identifier",
                                "src": "860:3:4"
                              }
                            ],
                            "id": 563,
                            "name": "MemberAccess",
                            "src": "860:10:4"
                          }
                        ],
                        "id": 564,
                        "name": "FunctionCall",
                        "src": "838:33:4"
                      }
                    ],
                    "id": 565,
                    "name": "VariableDeclarationStatement",
                    "src": "815:56:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct User.UserData storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct User.UserData storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 551,
                                  "type": "mapping(address => struct User.UserData storage ref)",
                                  "value": "users"
                                },
                                "id": 566,
                                "name": "Identifier",
                                "src": "884:5:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 677,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 567,
                                    "name": "Identifier",
                                    "src": "890:3:4"
                                  }
                                ],
                                "id": 568,
                                "name": "MemberAccess",
                                "src": "890:10:4"
                              }
                            ],
                            "id": 569,
                            "name": "IndexAccess",
                            "src": "884:17:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 557,
                              "type": "struct User.UserData memory",
                              "value": "user"
                            },
                            "id": 570,
                            "name": "Identifier",
                            "src": "904:4:4"
                          }
                        ],
                        "id": 571,
                        "name": "Assignment",
                        "src": "884:24:4"
                      }
                    ],
                    "id": 572,
                    "name": "ExpressionStatement",
                    "src": "884:24:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 83,
                                  "type": "mapping(address => uint256)",
                                  "value": "ownerNFTCount"
                                },
                                "id": 573,
                                "name": "Identifier",
                                "src": "921:13:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 677,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 574,
                                    "name": "Identifier",
                                    "src": "935:3:4"
                                  }
                                ],
                                "id": 575,
                                "name": "MemberAccess",
                                "src": "935:10:4"
                              }
                            ],
                            "id": 576,
                            "name": "IndexAccess",
                            "src": "921:25:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 577,
                            "name": "Literal",
                            "src": "949:1:4"
                          }
                        ],
                        "id": 578,
                        "name": "Assignment",
                        "src": "921:29:4"
                      }
                    ],
                    "id": 579,
                    "name": "ExpressionStatement",
                    "src": "921:29:4"
                  }
                ],
                "id": 580,
                "name": "Block",
                "src": "802:158:4"
              }
            ],
            "id": 581,
            "name": "FunctionDefinition",
            "src": "752:208:4"
          },
          {
            "attributes": {
              "documentation": "@dev Function to retrieve an existing user data",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getUserData",
              "scope": 662,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 582,
                "name": "ParameterList",
                "src": "1066:2:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 593,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct User.UserData",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "UserData",
                          "referencedDeclaration": 547,
                          "type": "struct User.UserData"
                        },
                        "id": 583,
                        "name": "UserDefinedTypeName",
                        "src": "1117:8:4"
                      }
                    ],
                    "id": 584,
                    "name": "VariableDeclaration",
                    "src": "1117:15:4"
                  }
                ],
                "id": 585,
                "name": "ParameterList",
                "src": "1116:17:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 585
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct User.UserData storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct User.UserData storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 551,
                                  "type": "mapping(address => struct User.UserData storage ref)",
                                  "value": "users"
                                },
                                "id": 586,
                                "name": "Identifier",
                                "src": "1158:5:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 677,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 587,
                                    "name": "Identifier",
                                    "src": "1164:3:4"
                                  }
                                ],
                                "id": 588,
                                "name": "MemberAccess",
                                "src": "1164:10:4"
                              }
                            ],
                            "id": 589,
                            "name": "IndexAccess",
                            "src": "1158:17:4"
                          }
                        ],
                        "id": 590,
                        "name": "TupleExpression",
                        "src": "1157:19:4"
                      }
                    ],
                    "id": 591,
                    "name": "Return",
                    "src": "1150:26:4"
                  }
                ],
                "id": 592,
                "name": "Block",
                "src": "1139:45:4"
              }
            ],
            "id": 593,
            "name": "FunctionDefinition",
            "src": "1046:138:4"
          },
          {
            "attributes": {
              "documentation": "\n     * @dev Function to create a new user and add them to the users mapping if they don't exist\n@return true if the user was added\n@return false if the user already exists",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "CheckAndCreateUser",
              "scope": 662,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 623,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 594,
                        "name": "ElementaryTypeName",
                        "src": "1437:6:4"
                      }
                    ],
                    "id": 595,
                    "name": "VariableDeclaration",
                    "src": "1437:19:4"
                  }
                ],
                "id": 596,
                "name": "ParameterList",
                "src": "1436:21:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 597,
                "name": "ParameterList",
                "src": "1467:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "exist",
                              "referencedDeclaration": 542,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct User.UserData storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 551,
                                      "type": "mapping(address => struct User.UserData storage ref)",
                                      "value": "users"
                                    },
                                    "id": 598,
                                    "name": "Identifier",
                                    "src": "1486:5:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 677,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 599,
                                        "name": "Identifier",
                                        "src": "1492:3:4"
                                      }
                                    ],
                                    "id": 600,
                                    "name": "MemberAccess",
                                    "src": "1492:10:4"
                                  }
                                ],
                                "id": 601,
                                "name": "IndexAccess",
                                "src": "1486:17:4"
                              }
                            ],
                            "id": 602,
                            "name": "MemberAccess",
                            "src": "1486:23:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 603,
                            "name": "Literal",
                            "src": "1513:5:4"
                          }
                        ],
                        "id": 604,
                        "name": "BinaryOperation",
                        "src": "1486:32:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 581,
                                      "type": "function (string memory)",
                                      "value": "_createUser"
                                    },
                                    "id": 605,
                                    "name": "Identifier",
                                    "src": "1535:11:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 595,
                                      "type": "string memory",
                                      "value": "_name"
                                    },
                                    "id": 606,
                                    "name": "Identifier",
                                    "src": "1547:5:4"
                                  }
                                ],
                                "id": 607,
                                "name": "FunctionCall",
                                "src": "1535:18:4"
                              }
                            ],
                            "id": 608,
                            "name": "ExpressionStatement",
                            "src": "1535:18:4"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_fcf45b15b07ae73a71799631d6f5477f8e0fa936e68d45ba3e9a952444dbe32e",
                                          "typeString": "literal_string \"New User Created!\""
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 538,
                                      "type": "function (string memory,bool)",
                                      "value": "UserCreatedStatus"
                                    },
                                    "id": 609,
                                    "name": "Identifier",
                                    "src": "1575:17:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "4e65772055736572204372656174656421",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"New User Created!\"",
                                      "value": "New User Created!"
                                    },
                                    "id": 610,
                                    "name": "Literal",
                                    "src": "1593:19:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "74727565",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "true"
                                    },
                                    "id": 611,
                                    "name": "Literal",
                                    "src": "1613:4:4"
                                  }
                                ],
                                "id": 612,
                                "name": "FunctionCall",
                                "src": "1575:43:4"
                              }
                            ],
                            "id": 613,
                            "name": "EmitStatement",
                            "src": "1570:48:4"
                          }
                        ],
                        "id": 614,
                        "name": "Block",
                        "src": "1520:121:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_95da09840e517bc488ba910267604a2fd6fa7f7915e2e0606439e56073ddecf1",
                                          "typeString": "literal_string \"User exists !\""
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 538,
                                      "type": "function (string memory,bool)",
                                      "value": "UserCreatedStatus"
                                    },
                                    "id": 615,
                                    "name": "Identifier",
                                    "src": "1682:17:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "55736572206578697374732021",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"User exists !\"",
                                      "value": "User exists !"
                                    },
                                    "id": 616,
                                    "name": "Literal",
                                    "src": "1700:15:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "66616c7365",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "false"
                                    },
                                    "id": 617,
                                    "name": "Literal",
                                    "src": "1716:5:4"
                                  }
                                ],
                                "id": 618,
                                "name": "FunctionCall",
                                "src": "1682:40:4"
                              }
                            ],
                            "id": 619,
                            "name": "EmitStatement",
                            "src": "1677:45:4"
                          }
                        ],
                        "id": 620,
                        "name": "Block",
                        "src": "1647:89:4"
                      }
                    ],
                    "id": 621,
                    "name": "IfStatement",
                    "src": "1482:254:4"
                  }
                ],
                "id": 622,
                "name": "Block",
                "src": "1467:286:4"
              }
            ],
            "id": 623,
            "name": "FunctionDefinition",
            "src": "1409:344:4"
          },
          {
            "attributes": {
              "documentation": "\n     * @dev Function to create a new NFT for a user calling this function",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createNewNFT",
              "scope": 662,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 661,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 624,
                        "name": "ElementaryTypeName",
                        "src": "1894:6:4"
                      }
                    ],
                    "id": 625,
                    "name": "VariableDeclaration",
                    "src": "1894:18:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
                      "scope": 661,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 626,
                        "name": "ElementaryTypeName",
                        "src": "1923:7:4"
                      }
                    ],
                    "id": 627,
                    "name": "VariableDeclaration",
                    "src": "1923:13:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "category",
                      "scope": 661,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 628,
                        "name": "ElementaryTypeName",
                        "src": "1948:6:4"
                      }
                    ],
                    "id": 629,
                    "name": "VariableDeclaration",
                    "src": "1948:22:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "artFileUrl",
                      "scope": 661,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 630,
                        "name": "ElementaryTypeName",
                        "src": "1981:6:4"
                      }
                    ],
                    "id": 631,
                    "name": "VariableDeclaration",
                    "src": "1981:24:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "userName",
                      "scope": 661,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 632,
                        "name": "ElementaryTypeName",
                        "src": "2016:6:4"
                      }
                    ],
                    "id": 633,
                    "name": "VariableDeclaration",
                    "src": "2016:22:4"
                  }
                ],
                "id": 634,
                "name": "ParameterList",
                "src": "1883:162:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 635,
                "name": "ParameterList",
                "src": "2053:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                680,
                                681
                              ],
                              "referencedDeclaration": 680,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 636,
                            "name": "Identifier",
                            "src": "2219:7:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 83,
                                      "type": "mapping(address => uint256)",
                                      "value": "ownerNFTCount"
                                    },
                                    "id": 637,
                                    "name": "Identifier",
                                    "src": "2227:13:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 677,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 638,
                                        "name": "Identifier",
                                        "src": "2241:3:4"
                                      }
                                    ],
                                    "id": 639,
                                    "name": "MemberAccess",
                                    "src": "2241:10:4"
                                  }
                                ],
                                "id": 640,
                                "name": "IndexAccess",
                                "src": "2227:25:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "mintingLimit",
                                  "referencedDeclaration": 544,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct User.UserData storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 551,
                                          "type": "mapping(address => struct User.UserData storage ref)",
                                          "value": "users"
                                        },
                                        "id": 641,
                                        "name": "Identifier",
                                        "src": "2256:5:4"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 677,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 642,
                                            "name": "Identifier",
                                            "src": "2262:3:4"
                                          }
                                        ],
                                        "id": 643,
                                        "name": "MemberAccess",
                                        "src": "2262:10:4"
                                      }
                                    ],
                                    "id": 644,
                                    "name": "IndexAccess",
                                    "src": "2256:17:4"
                                  }
                                ],
                                "id": 645,
                                "name": "MemberAccess",
                                "src": "2256:30:4"
                              }
                            ],
                            "id": 646,
                            "name": "BinaryOperation",
                            "src": "2227:59:4"
                          }
                        ],
                        "id": 647,
                        "name": "FunctionCall",
                        "src": "2219:68:4"
                      }
                    ],
                    "id": 648,
                    "name": "ExpressionStatement",
                    "src": "2219:68:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 623,
                              "type": "function (string memory)",
                              "value": "CheckAndCreateUser"
                            },
                            "id": 649,
                            "name": "Identifier",
                            "src": "2300:18:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 633,
                              "type": "string memory",
                              "value": "userName"
                            },
                            "id": 650,
                            "name": "Identifier",
                            "src": "2319:8:4"
                          }
                        ],
                        "id": 651,
                        "name": "FunctionCall",
                        "src": "2300:28:4"
                      }
                    ],
                    "id": 652,
                    "name": "ExpressionStatement",
                    "src": "2300:28:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 165,
                              "type": "function (string memory,uint256,string memory,string memory)",
                              "value": "_mintERC721Token"
                            },
                            "id": 653,
                            "name": "Identifier",
                            "src": "2343:16:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 625,
                              "type": "string memory",
                              "value": "name"
                            },
                            "id": 654,
                            "name": "Identifier",
                            "src": "2360:4:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 627,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 655,
                            "name": "Identifier",
                            "src": "2366:5:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 629,
                              "type": "string memory",
                              "value": "category"
                            },
                            "id": 656,
                            "name": "Identifier",
                            "src": "2373:8:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 631,
                              "type": "string memory",
                              "value": "artFileUrl"
                            },
                            "id": 657,
                            "name": "Identifier",
                            "src": "2383:10:4"
                          }
                        ],
                        "id": 658,
                        "name": "FunctionCall",
                        "src": "2343:51:4"
                      }
                    ],
                    "id": 659,
                    "name": "ExpressionStatement",
                    "src": "2343:51:4"
                  }
                ],
                "id": 660,
                "name": "Block",
                "src": "2053:349:4"
              }
            ],
            "id": 661,
            "name": "FunctionDefinition",
            "src": "1862:540:4"
          }
        ],
        "id": 662,
        "name": "ContractDefinition",
        "src": "120:2285:4"
      }
    ],
    "id": 663,
    "name": "SourceUnit",
    "src": "0:2407:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xf3516922ab7b85da7be501737934fc735e896c9a5685afafa68a7680ba6feed0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "NFTid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "NewNFTCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c90": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "stateMsg",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ],
          "name": "UserCreatedStatus",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE9c16cB5Aa700494E5b21BAE7DbdAD448077ff32",
      "transactionHash": "0x46eea72f04cd18b21872fa00f862dfabe0d9af262a83959d79842439bd212c84"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-28T13:40:34.429Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "createNewNFT(string,uint256,string,string,string)": {
        "details": "Function to create a new NFT for a user calling this function"
      },
      "getUserData()": {
        "details": "Function to retrieve an existing user data"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}