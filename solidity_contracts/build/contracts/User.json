{
  "contractName": "User",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NFTid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NewNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "stateMsg",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "UserCreatedStatus",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NFTApprovals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NFTOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NFTsList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "NftCategory",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "artFileUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllNFTs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "NftCategory",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "artFileUrl",
              "type": "string"
            }
          ],
          "internalType": "struct NFT.Nft[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "mintingLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUserData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "userName",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "mintingLimit",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct User.UserData",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "artFileUrl",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        }
      ],
      "name": "createNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NFTid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stateMsg\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"UserCreatedStatus\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTsList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"NftCategory\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"artFileUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"artFileUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"}],\"name\":\"createNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"NftCategory\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"artFileUrl\",\"type\":\"string\"}],\"internalType\":\"struct NFT.Nft[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"mintingLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct User.UserData\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"mintingLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"method that allows only the owner of an NFT using the modifier onlyOwnerOf to approve an other user to transfer ownership \"},\"balanceOf(address)\":{\"details\":\"method to get the number of NFT's a caller has\",\"return\":\"uint as the count\"},\"createNewNFT(string,uint256,string,string,string)\":{\"details\":\"Function to create a new NFT for a user calling this function\"},\"getAllNFTs()\":{\"details\":\"method that returns the entire NFTsList\",\"return\":\"Nft[] \"},\"getUserData()\":{\"details\":\"Function to retrieve user data if it exists\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"ownerOf(uint256)\":{\"details\":\"method to get the address of the an NFT owner\",\"return\":\"address of the owner\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"public payable method that gets called  from the front-end using metamask as the user account and web.js this method will call _transferNFT to transfer the NFT ownership and transfers the amount set in the  transaction from the sender's address to the receiver's (caller) address \"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Smart contract to hold the user data also imports the Ownable and NFT smart contracts\"}},\"settings\":{\"compilationTarget\":{\"project:/contracts/user.sol\":\"User\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/erc721.sol\":{\"keccak256\":\"0xd69bd569119bbfa2b645fa86f9e1c19970e1afe577913352f183b9c83cd3cf53\",\"urls\":[\"bzz-raw://593df132d0fdc843ea4263b15af5ec5ef2aee29a703a88ea7efbaa4af3deb8cf\",\"dweb:/ipfs/QmW8aTfQEHVZVF11GhQSeZw1bQsSy8Mg6D4S5KQ8SYRZaT\"]},\"project:/contracts/nft.sol\":{\"keccak256\":\"0xadaf225eba999b5b758571dcc37a6c58265c64513f4305386230fc89383eaefe\",\"urls\":[\"bzz-raw://848575f3c9969f5fdd6d2392b761d2fde23132ae24266a07c5ae4a9407b634bf\",\"dweb:/ipfs/QmX4nHsyrVrAan1fVMt1rVjhEjQBxUZGdH844XMQirJkwY\"]},\"project:/contracts/ownable.sol\":{\"keccak256\":\"0xe4249564c3d41ecd48cda271a956ad9d31044b94ba088ec2a7d8dd4a31bcf354\",\"urls\":[\"bzz-raw://c65d3ec3f73d3e14da594a34a73588fdb0cfcadc29173fa96cc1c688f4b7a332\",\"dweb:/ipfs/QmbLds1SX24RmtKoVvQKJvjL6WsWoLNGz1XLipvQzHZc93\"]},\"project:/contracts/safemath.sol\":{\"keccak256\":\"0xb76a935df16b937d9aeaaeb4a5f90ed62ce2b76122ebabf270b9af70f3a84ba0\",\"urls\":[\"bzz-raw://1e1d9b4139793dbe2e4220116be11ce48641bcb85a9d1e833f07ad1da3eaa4e5\",\"dweb:/ipfs/QmZjGavq7Bsw9sanreVfAa9ddhTeEqTAjzMq7yk35RW1ug\"]},\"project:/contracts/user.sol\":{\"keccak256\":\"0x8a03957392494fed650f5cb94d370150c60930554018c9e9549f051a7a8ff15e\",\"urls\":[\"bzz-raw://79de0a5f9ffdaf345a4a449496bd4eca00372e3bf0fb7658a42a3b23add92f37\",\"dweb:/ipfs/QmTygnMBTtw5uFoBvsnQjqbbS3tzSbmguSb85nBKMQayp9\"]}},\"version\":1}",
  "bytecode": "0x608060405233600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36121e6806100d16000396000f3fe6080604052600436106100f35760003560e01c8063a87430ba1161008a578063e0391b0911610059578063e0391b0914610325578063e602eb3d14610350578063f2fde38b14610391578063fb88df18146103ba576100f3565b8063a87430ba14610242578063caa56c6d14610282578063d51fe9cb146102ab578063dd297ce8146102e8576100f3565b806370a08231116100c657806370a0823114610198578063715018a6146101d55780638da5cb5b146101ec5780638f32d59b14610217576100f3565b8063095ea7b3146100f857806322e8c87d1461011457806323b872dd1461013f5780636352211e1461015b575b600080fd5b610112600480360361010d9190810190611924565b6103f7565b005b34801561012057600080fd5b5061012961054a565b6040516101369190611f3b565b60405180910390f35b610159600480360361015491908101906118d5565b6106be565b005b34801561016757600080fd5b50610182600480360361017d9190810190611a37565b6107d6565b60405161018f9190611dfb565b60405180910390f35b3480156101a457600080fd5b506101bf60048036036101ba91908101906118ac565b610812565b6040516101cc9190611f5d565b60405180910390f35b3480156101e157600080fd5b506101ea61085b565b005b3480156101f857600080fd5b5061020161092d565b60405161020e9190611dfb565b60405180910390f35b34801561022357600080fd5b5061022c610957565b6040516102399190611e38565b60405180910390f35b34801561024e57600080fd5b50610269600480360361026491908101906118ac565b6109af565b6040516102799493929190611e53565b60405180910390f35b34801561028e57600080fd5b506102a960048036036102a49190810190611960565b610aa4565b005b3480156102b757600080fd5b506102d260048036036102cd9190810190611a37565b610b4e565b6040516102df9190611dfb565b60405180910390f35b3480156102f457600080fd5b5061030f600480360361030a9190810190611a37565b610b81565b60405161031c9190611dfb565b60405180910390f35b34801561033157600080fd5b5061033a610bb4565b6040516103479190611e16565b60405180910390f35b34801561035c57600080fd5b5061037760048036036103729190810190611a37565b610e0d565b604051610388959493929190611fa8565b60405180910390f35b34801561039d57600080fd5b506103b860048036036103b391908101906118ac565b611018565b005b3480156103c657600080fd5b506103e160048036036103dc91908101906118ac565b611035565b6040516103ee9190611f5d565b60405180910390f35b8060008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f90611eed565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610552611749565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b34600382815481106106cc57fe5b9060005260206000209060050201600301541461071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611e9f565b60405180910390fd5b61072983838361104d565b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610774573d6000803e3d6000fd5b50818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610863610957565b61086c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6005602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5b5780601f10610a3057610100808354040283529160200191610a5b565b820191906000526020600020905b815481529060010190602001808311610a3e57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b3257600080fd5b610b3b816111cd565b610b47858585856112ab565b5050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610e0457838290600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d405780601f10610d1557610100808354040283529160200191610d40565b820191906000526020600020905b815481529060010190602001808311610d2357829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b50505050508152505081526020019060010190610bd8565b50505050905090565b60038181548110610e1a57fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ecc5780601f10610ea157610100808354040283529160200191610ecc565b820191906000526020600020905b815481529060010190602001808311610eaf57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561100e5780601f10610fe35761010080835404028352916020019161100e565b820191906000526020600020905b815481529060010190602001808311610ff157829003601f168201915b5050505050905085565b611020610957565b61102957600080fd5b611032816114bd565b50565b60016020528060005260406000206000915090505481565b61109f60018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115b790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061113460018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d390919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60001515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515141561126f57611232816115ea565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c9060016040516112629190611f0d565b60405180910390a16112a8565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c90600060405161129f9190611ebf565b60405180910390a15b50565b6000600160036040518060a0016040528060008152602001888152602001868152602001878152602001858152509080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000155602082015181600101908051906020019061132a929190611789565b506040820151816002019080519060200190611347929190611789565b5060608201518160030155608082015181600401908051906020019061136e929190611789565b505050039050806003828154811061138257fe5b9060005260206000209060050201600001819055503360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061143a60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115b790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff3516922ab7b85da7be501737934fc735e896c9a5685afafa68a7680ba6feed081866040516114ae929190611f78565b60405180910390a15050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114f757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808284019050838110156115c957fe5b8091505092915050565b6000828211156115df57fe5b818303905092915050565b6115f2611749565b6040518060800160405280838152602001600115158152602001600481526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061168b929190611789565b5060208201518160010160006101000a81548160ff0219169083151502179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405180608001604052806060815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106117ca57805160ff19168380011785556117f8565b828001600101855582156117f8579182015b828111156117f75782518255916020019190600101906117dc565b5b5090506118059190611809565b5090565b61182b91905b8082111561182757600081600090555060010161180f565b5090565b90565b60008135905061183d81612175565b92915050565b600082601f83011261185457600080fd5b81356118676118628261203d565b612010565b9150808252602083016020830185838301111561188357600080fd5b61188e838284612122565b50505092915050565b6000813590506118a68161218c565b92915050565b6000602082840312156118be57600080fd5b60006118cc8482850161182e565b91505092915050565b6000806000606084860312156118ea57600080fd5b60006118f88682870161182e565b93505060206119098682870161182e565b925050604061191a86828701611897565b9150509250925092565b6000806040838503121561193757600080fd5b60006119458582860161182e565b925050602061195685828601611897565b9150509250929050565b600080600080600060a0868803121561197857600080fd5b600086013567ffffffffffffffff81111561199257600080fd5b61199e88828901611843565b95505060206119af88828901611897565b945050604086013567ffffffffffffffff8111156119cc57600080fd5b6119d888828901611843565b935050606086013567ffffffffffffffff8111156119f557600080fd5b611a0188828901611843565b925050608086013567ffffffffffffffff811115611a1e57600080fd5b611a2a88828901611843565b9150509295509295909350565b600060208284031215611a4957600080fd5b6000611a5784828501611897565b91505092915050565b6000611a6c8383611cf6565b905092915050565b611a7d816120da565b82525050565b611a8c816120da565b82525050565b6000611a9d82612079565b611aa781856120a7565b935083602082028501611ab985612069565b8060005b85811015611af55784840389528151611ad68582611a60565b9450611ae18361209a565b925060208a01995050600181019050611abd565b50829750879550505050505092915050565b611b10816120ec565b82525050565b611b1f816120ec565b82525050565b6000611b308261208f565b611b3a81856120c9565b9350611b4a818560208601612131565b611b5381612164565b840191505092915050565b6000611b6982612084565b611b7381856120b8565b9350611b83818560208601612131565b611b8c81612164565b840191505092915050565b6000611ba282612084565b611bac81856120c9565b9350611bbc818560208601612131565b611bc581612164565b840191505092915050565b6000611bdd602e836120c9565b91507f596f7520646f6e2774206861766520656e6f7567682066756e647320666f722060008301527f74686973207472616e73666572210000000000000000000000000000000000006020830152604082019050919050565b6000611c43600d836120c9565b91507f55736572206578697374732021000000000000000000000000000000000000006000830152602082019050919050565b6000611c836017836120c9565b91507f596f7520617265206e6f7420746865206f776e657220210000000000000000006000830152602082019050919050565b6000611cc36011836120c9565b91507f4e657720557365722043726561746564210000000000000000000000000000006000830152602082019050919050565b600060a083016000830151611d0e6000860182611ddd565b5060208301518482036020860152611d268282611b5e565b91505060408301518482036040860152611d408282611b5e565b9150506060830151611d556060860182611ddd565b5060808301518482036080860152611d6d8282611b5e565b9150508091505092915050565b60006080830160008301518482036000860152611d978282611b5e565b9150506020830151611dac6020860182611b07565b506040830151611dbf6040860182611ddd565b506060830151611dd26060860182611a74565b508091505092915050565b611de681612118565b82525050565b611df581612118565b82525050565b6000602082019050611e106000830184611a83565b92915050565b60006020820190508181036000830152611e308184611a92565b905092915050565b6000602082019050611e4d6000830184611b16565b92915050565b60006080820190508181036000830152611e6d8187611b97565b9050611e7c6020830186611b16565b611e896040830185611dec565b611e966060830184611a83565b95945050505050565b60006020820190508181036000830152611eb881611bd0565b9050919050565b60006040820190508181036000830152611ed881611c36565b9050611ee76020830184611b16565b92915050565b60006020820190508181036000830152611f0681611c76565b9050919050565b60006040820190508181036000830152611f2681611cb6565b9050611f356020830184611b16565b92915050565b60006020820190508181036000830152611f558184611d7a565b905092915050565b6000602082019050611f726000830184611dec565b92915050565b6000604082019050611f8d6000830185611dec565b8181036020830152611f9f8184611b25565b90509392505050565b600060a082019050611fbd6000830188611dec565b8181036020830152611fcf8187611b97565b90508181036040830152611fe38186611b97565b9050611ff26060830185611dec565b81810360808301526120048184611b97565b90509695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561203357600080fd5b8060405250919050565b600067ffffffffffffffff82111561205457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006120e5826120f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561214f578082015181840152602081019050612134565b8381111561215e576000848401525b50505050565b6000601f19601f8301169050919050565b61217e816120da565b811461218957600080fd5b50565b61219581612118565b81146121a057600080fd5b5056fea365627a7a72315820976a563a20716b059f76e91de388f08d9ccfab838a38692ab922ce2f0a35d5546c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063a87430ba1161008a578063e0391b0911610059578063e0391b0914610325578063e602eb3d14610350578063f2fde38b14610391578063fb88df18146103ba576100f3565b8063a87430ba14610242578063caa56c6d14610282578063d51fe9cb146102ab578063dd297ce8146102e8576100f3565b806370a08231116100c657806370a0823114610198578063715018a6146101d55780638da5cb5b146101ec5780638f32d59b14610217576100f3565b8063095ea7b3146100f857806322e8c87d1461011457806323b872dd1461013f5780636352211e1461015b575b600080fd5b610112600480360361010d9190810190611924565b6103f7565b005b34801561012057600080fd5b5061012961054a565b6040516101369190611f3b565b60405180910390f35b610159600480360361015491908101906118d5565b6106be565b005b34801561016757600080fd5b50610182600480360361017d9190810190611a37565b6107d6565b60405161018f9190611dfb565b60405180910390f35b3480156101a457600080fd5b506101bf60048036036101ba91908101906118ac565b610812565b6040516101cc9190611f5d565b60405180910390f35b3480156101e157600080fd5b506101ea61085b565b005b3480156101f857600080fd5b5061020161092d565b60405161020e9190611dfb565b60405180910390f35b34801561022357600080fd5b5061022c610957565b6040516102399190611e38565b60405180910390f35b34801561024e57600080fd5b50610269600480360361026491908101906118ac565b6109af565b6040516102799493929190611e53565b60405180910390f35b34801561028e57600080fd5b506102a960048036036102a49190810190611960565b610aa4565b005b3480156102b757600080fd5b506102d260048036036102cd9190810190611a37565b610b4e565b6040516102df9190611dfb565b60405180910390f35b3480156102f457600080fd5b5061030f600480360361030a9190810190611a37565b610b81565b60405161031c9190611dfb565b60405180910390f35b34801561033157600080fd5b5061033a610bb4565b6040516103479190611e16565b60405180910390f35b34801561035c57600080fd5b5061037760048036036103729190810190611a37565b610e0d565b604051610388959493929190611fa8565b60405180910390f35b34801561039d57600080fd5b506103b860048036036103b391908101906118ac565b611018565b005b3480156103c657600080fd5b506103e160048036036103dc91908101906118ac565b611035565b6040516103ee9190611f5d565b60405180910390f35b8060008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f90611eed565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610552611749565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b34600382815481106106cc57fe5b9060005260206000209060050201600301541461071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611e9f565b60405180910390fd5b61072983838361104d565b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610774573d6000803e3d6000fd5b50818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610863610957565b61086c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6005602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5b5780601f10610a3057610100808354040283529160200191610a5b565b820191906000526020600020905b815481529060010190602001808311610a3e57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b3257600080fd5b610b3b816111cd565b610b47858585856112ab565b5050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610e0457838290600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d405780601f10610d1557610100808354040283529160200191610d40565b820191906000526020600020905b815481529060010190602001808311610d2357829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b50505050508152505081526020019060010190610bd8565b50505050905090565b60038181548110610e1a57fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ecc5780601f10610ea157610100808354040283529160200191610ecc565b820191906000526020600020905b815481529060010190602001808311610eaf57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561100e5780601f10610fe35761010080835404028352916020019161100e565b820191906000526020600020905b815481529060010190602001808311610ff157829003601f168201915b5050505050905085565b611020610957565b61102957600080fd5b611032816114bd565b50565b60016020528060005260406000206000915090505481565b61109f60018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115b790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061113460018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d390919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60001515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515141561126f57611232816115ea565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c9060016040516112629190611f0d565b60405180910390a16112a8565b7f498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c90600060405161129f9190611ebf565b60405180910390a15b50565b6000600160036040518060a0016040528060008152602001888152602001868152602001878152602001858152509080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000155602082015181600101908051906020019061132a929190611789565b506040820151816002019080519060200190611347929190611789565b5060608201518160030155608082015181600401908051906020019061136e929190611789565b505050039050806003828154811061138257fe5b9060005260206000209060050201600001819055503360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061143a60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115b790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff3516922ab7b85da7be501737934fc735e896c9a5685afafa68a7680ba6feed081866040516114ae929190611f78565b60405180910390a15050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114f757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808284019050838110156115c957fe5b8091505092915050565b6000828211156115df57fe5b818303905092915050565b6115f2611749565b6040518060800160405280838152602001600115158152602001600481526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061168b929190611789565b5060208201518160010160006101000a81548160ff0219169083151502179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405180608001604052806060815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106117ca57805160ff19168380011785556117f8565b828001600101855582156117f8579182015b828111156117f75782518255916020019190600101906117dc565b5b5090506118059190611809565b5090565b61182b91905b8082111561182757600081600090555060010161180f565b5090565b90565b60008135905061183d81612175565b92915050565b600082601f83011261185457600080fd5b81356118676118628261203d565b612010565b9150808252602083016020830185838301111561188357600080fd5b61188e838284612122565b50505092915050565b6000813590506118a68161218c565b92915050565b6000602082840312156118be57600080fd5b60006118cc8482850161182e565b91505092915050565b6000806000606084860312156118ea57600080fd5b60006118f88682870161182e565b93505060206119098682870161182e565b925050604061191a86828701611897565b9150509250925092565b6000806040838503121561193757600080fd5b60006119458582860161182e565b925050602061195685828601611897565b9150509250929050565b600080600080600060a0868803121561197857600080fd5b600086013567ffffffffffffffff81111561199257600080fd5b61199e88828901611843565b95505060206119af88828901611897565b945050604086013567ffffffffffffffff8111156119cc57600080fd5b6119d888828901611843565b935050606086013567ffffffffffffffff8111156119f557600080fd5b611a0188828901611843565b925050608086013567ffffffffffffffff811115611a1e57600080fd5b611a2a88828901611843565b9150509295509295909350565b600060208284031215611a4957600080fd5b6000611a5784828501611897565b91505092915050565b6000611a6c8383611cf6565b905092915050565b611a7d816120da565b82525050565b611a8c816120da565b82525050565b6000611a9d82612079565b611aa781856120a7565b935083602082028501611ab985612069565b8060005b85811015611af55784840389528151611ad68582611a60565b9450611ae18361209a565b925060208a01995050600181019050611abd565b50829750879550505050505092915050565b611b10816120ec565b82525050565b611b1f816120ec565b82525050565b6000611b308261208f565b611b3a81856120c9565b9350611b4a818560208601612131565b611b5381612164565b840191505092915050565b6000611b6982612084565b611b7381856120b8565b9350611b83818560208601612131565b611b8c81612164565b840191505092915050565b6000611ba282612084565b611bac81856120c9565b9350611bbc818560208601612131565b611bc581612164565b840191505092915050565b6000611bdd602e836120c9565b91507f596f7520646f6e2774206861766520656e6f7567682066756e647320666f722060008301527f74686973207472616e73666572210000000000000000000000000000000000006020830152604082019050919050565b6000611c43600d836120c9565b91507f55736572206578697374732021000000000000000000000000000000000000006000830152602082019050919050565b6000611c836017836120c9565b91507f596f7520617265206e6f7420746865206f776e657220210000000000000000006000830152602082019050919050565b6000611cc36011836120c9565b91507f4e657720557365722043726561746564210000000000000000000000000000006000830152602082019050919050565b600060a083016000830151611d0e6000860182611ddd565b5060208301518482036020860152611d268282611b5e565b91505060408301518482036040860152611d408282611b5e565b9150506060830151611d556060860182611ddd565b5060808301518482036080860152611d6d8282611b5e565b9150508091505092915050565b60006080830160008301518482036000860152611d978282611b5e565b9150506020830151611dac6020860182611b07565b506040830151611dbf6040860182611ddd565b506060830151611dd26060860182611a74565b508091505092915050565b611de681612118565b82525050565b611df581612118565b82525050565b6000602082019050611e106000830184611a83565b92915050565b60006020820190508181036000830152611e308184611a92565b905092915050565b6000602082019050611e4d6000830184611b16565b92915050565b60006080820190508181036000830152611e6d8187611b97565b9050611e7c6020830186611b16565b611e896040830185611dec565b611e966060830184611a83565b95945050505050565b60006020820190508181036000830152611eb881611bd0565b9050919050565b60006040820190508181036000830152611ed881611c36565b9050611ee76020830184611b16565b92915050565b60006020820190508181036000830152611f0681611c76565b9050919050565b60006040820190508181036000830152611f2681611cb6565b9050611f356020830184611b16565b92915050565b60006020820190508181036000830152611f558184611d7a565b905092915050565b6000602082019050611f726000830184611dec565b92915050565b6000604082019050611f8d6000830185611dec565b8181036020830152611f9f8184611b25565b90509392505050565b600060a082019050611fbd6000830188611dec565b8181036020830152611fcf8187611b97565b90508181036040830152611fe38186611b97565b9050611ff26060830185611dec565b81810360808301526120048184611b97565b90509695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561203357600080fd5b8060405250919050565b600067ffffffffffffffff82111561205457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006120e5826120f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561214f578082015181840152602081019050612134565b8381111561215e576000848401525b50505050565b6000601f19601f8301169050919050565b61217e816120da565b811461218957600080fd5b50565b61219581612118565b81146121a057600080fd5b5056fea365627a7a72315820976a563a20716b059f76e91de388f08d9ccfab838a38692ab922ce2f0a35d5546c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "218:2778:4:-;;;540:10:2;531:6;;:19;;;;;;;;;;;;;;;;;;595:6;;;;;;;;;;;562:40;;591:1;562:40;;;;;;;;;;;;218:2778:4;;;;;;",
  "deployedSourceMap": "218:2778:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:235:1;;;;;;;;;;;;;;;;:::i;:::-;;1356:138:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1356:138:4;;;:::i;:::-;;;;;;;;;;;;;;;;4769:980:1;;;;;;;;;;;;;;;;:::i;:::-;;4320:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4320:111:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4082:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4082:114:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1316:130:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:130:2;;;:::i;:::-;;666:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:72:2;;;:::i;:::-;;;;;;;;;;;;;;;;964:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:85:2;;;:::i;:::-;;;;;;;;;;;;;;;;732:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;732:41:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2339:654;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2339:654:4;;;;;;;;;;;;;;;;:::i;:::-;;1023:43:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1023:43:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1242:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1242:47:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5858:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5858:93:1;;;:::i;:::-;;;;;;;;;;;;;;;;1341:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1341:21:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1610:103:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1610:103:2;;;;;;;;;;;;;;;;:::i;:::-;;1142:48:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1142:48:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1962:235;2072:8;1726;:16;1735:6;1726:16;;;;;;;;;;;;;;;;;;;;;1712:30;;:10;:30;;;1704:66;;;;;;;;;;;;;;;;;;;;;;2123:9;2098:12;:22;2111:8;2098:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2180:8;2169:9;2148:41;;2157:10;2148:41;;;;;;;;;;;;1962:235;;;:::o;1356:138:4:-;1427:15;;:::i;:::-;1468:5;:17;1474:10;1468:17;;;;;;;;;;;;;;;1460:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:138;:::o;4769:980:1:-;5089:9;5061:8;5070;5061:18;;;;;;;;;;;;;;;;;;:24;;;:37;5039:133;;;;;;;;;;;;;;;;;;;;;;5234:34;5247:5;5254:3;5259:8;5234:12;:34::i;:::-;5444:32;5495:5;5444:58;;5569:16;:25;;:36;5595:9;5569:36;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5569:36:1;5732:8;5727:3;5711:30;;5720:5;5711:30;;;;;;;;;;;;4769:980;;;;:::o;4320:111::-;4378:7;4405:8;:18;4414:8;4405:18;;;;;;;;;;;;;;;;;;;;;4398:25;;4320:111;;;:::o;4082:114::-;4140:7;4167:13;:21;4181:6;4167:21;;;;;;;;;;;;;;;;4160:28;;4082:114;;;:::o;1316:130:2:-;857:9;:7;:9::i;:::-;849:18;;;;;;1411:1;1374:40;;1395:6;;;;;;;;;;;1374:40;;;;;;;;;;;;1438:1;1421:6;;:19;;;;;;;;;;;;;;;;;;1316:130::o;666:72::-;703:7;726:6;;;;;;;;;;;719:13;;666:72;:::o;964:85::-;1003:4;1037:6;;;;;;;;;;;1023:20;;:10;:20;;;1016:27;;964:85;:::o;732:41:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2339:654::-;2733:5;:17;2739:10;2733:17;;;;;;;;;;;;;;;:30;;;2704:13;:25;2718:10;2704:25;;;;;;;;;;;;;;;;:59;;2696:68;;;;;;2823:28;2842:8;2823:18;:28::i;:::-;2934:51;2951:4;2957:5;2964:8;2974:10;2934:16;:51::i;:::-;2339:654;;;;;:::o;1023:43:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;1242:47::-;;;;;;;;;;;;;;;;;;;;;;:::oo;1341:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1610:103:2:-;857:9;:7;:9::i;:::-;849:18;;;;;;1679:28;1698:8;1679:18;:28::i;:::-;1610:103;:::o;1142:48:1:-;;;;;;;;;;;;;;;;;:::o;3488:472::-;3687:25;3710:1;3687:13;:18;3701:3;3687:18;;;;;;;;;;;;;;;;:22;;:25;;;;:::i;:::-;3666:13;:18;3680:3;3666:18;;;;;;;;;;;;;;;:46;;;;3805:27;3830:1;3805:13;:20;3819:5;3805:20;;;;;;;;;;;;;;;;:24;;:27;;;;:::i;:::-;3782:13;:20;3796:5;3782:20;;;;;;;;;;;;;;;:50;;;;3949:3;3928:8;:18;3937:8;3928:18;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;3488:472;;;:::o;1719:511:4:-;1889:5;1862:32;;:5;:17;1868:10;1862:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;1858:355;;;1911:18;1923:5;1911:11;:18::i;:::-;2015:43;2053:4;2015:43;;;;;;;;;;;;;;;1858:355;;;2159:40;2193:5;2159:40;;;;;;;;;;;;;;;1858:355;1719:511;:::o;2269:1137:1:-;2809:13;2908:1;2825:8;2853:41;;;;;;;;2857:1;2853:41;;;;2860:4;2853:41;;;;2866:8;2853:41;;;;2876:5;2853:41;;;;2883:10;2853:41;;;2825:80;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2825:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:84;2809:100;;2991:5;2970:8;2979:5;2970:15;;;;;;;;;;;;;;;;;;:18;;:26;;;;3135:10;3117:8;:15;3126:5;3117:15;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;3278:32;3308:1;3278:13;:25;3292:10;3278:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;3250:13;:25;3264:10;3250:25;;;;;;;;;;;;;;;:60;;;;3372:26;3386:5;3393:4;3372:26;;;;;;;;;;;;;;;;2269:1137;;;;;:::o;1850:173:2:-;1940:1;1920:22;;:8;:22;;;;1912:31;;;;;;1984:8;1955:38;;1976:6;;;;;;;;;;;1955:38;;;;;;;;;;;;2009:8;2000:6;;:17;;;;;;;;;;;;;;;;;;1850:173;:::o;1162:133:3:-;1220:7;1236:9;1252:1;1248;:5;1236:17;;1272:1;1267;:6;;1260:14;;;;1288:1;1281:8;;;1162:133;;;;:::o;982:113::-;1040:7;1068:1;1063;:6;;1056:14;;;;1088:1;1084;:5;1077:12;;982:113;;;;:::o;889:380:4:-;991:20;;:::i;:::-;1014:33;;;;;;;;1023:5;1014:33;;;;1029:4;1014:33;;;;;;1034:1;1014:33;;;;1036:10;1014:33;;;;;991:56;;1158:4;1138:5;:17;1144:10;1138:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:1;1230:13;:25;1244:10;1230:25;;;;;;;;;;;;;;;:29;;;;889:380;;:::o;218:2778::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:491;;;;1116:2;1104:9;1095:7;1091:23;1087:32;1084:2;;;1132:1;1129;1122:12;1084:2;1167:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;;;1174:63;;1146:97;1274:2;1292:53;1337:7;1328:6;1317:9;1313:22;1292:53;;;1282:63;;1253:98;1382:2;1400:53;1445:7;1436:6;1425:9;1421:22;1400:53;;;1390:63;;1361:98;1078:391;;;;;;1476:366;;;1597:2;1585:9;1576:7;1572:23;1568:32;1565:2;;;1613:1;1610;1603:12;1565:2;1648:1;1665:53;1710:7;1701:6;1690:9;1686:22;1665:53;;;1655:63;;1627:97;1755:2;1773:53;1818:7;1809:6;1798:9;1794:22;1773:53;;;1763:63;;1734:98;1559:283;;;;;;1849:1167;;;;;;2061:3;2049:9;2040:7;2036:23;2032:33;2029:2;;;2078:1;2075;2068:12;2029:2;2141:1;2130:9;2126:17;2113:31;2164:18;2156:6;2153:30;2150:2;;;2196:1;2193;2186:12;2150:2;2216:63;2271:7;2262:6;2251:9;2247:22;2216:63;;;2206:73;;2092:193;2316:2;2334:53;2379:7;2370:6;2359:9;2355:22;2334:53;;;2324:63;;2295:98;2452:2;2441:9;2437:18;2424:32;2476:18;2468:6;2465:30;2462:2;;;2508:1;2505;2498:12;2462:2;2528:63;2583:7;2574:6;2563:9;2559:22;2528:63;;;2518:73;;2403:194;2656:2;2645:9;2641:18;2628:32;2680:18;2672:6;2669:30;2666:2;;;2712:1;2709;2702:12;2666:2;2732:63;2787:7;2778:6;2767:9;2763:22;2732:63;;;2722:73;;2607:194;2860:3;2849:9;2845:19;2832:33;2885:18;2877:6;2874:30;2871:2;;;2917:1;2914;2907:12;2871:2;2937:63;2992:7;2983:6;2972:9;2968:22;2937:63;;;2927:73;;2811:195;2023:993;;;;;;;;;3023:241;;3127:2;3115:9;3106:7;3102:23;3098:32;3095:2;;;3143:1;3140;3133:12;3095:2;3178:1;3195:53;3240:7;3231:6;3220:9;3216:22;3195:53;;;3185:63;;3157:97;3089:175;;;;;3272:217;;3403:80;3479:3;3471:6;3403:80;;;3389:94;;3382:107;;;;;3497:103;3570:24;3588:5;3570:24;;;3565:3;3558:37;3552:48;;;3607:113;3690:24;3708:5;3690:24;;;3685:3;3678:37;3672:48;;;3772:968;;3947:69;4010:5;3947:69;;;4029:101;4123:6;4118:3;4029:101;;;4022:108;;4153:3;4195:4;4187:6;4183:17;4178:3;4174:27;4222:71;4287:5;4222:71;;;4313:7;4341:1;4326:375;4351:6;4348:1;4345:13;4326:375;;;4413:9;4407:4;4403:20;4398:3;4391:33;4458:6;4452:13;4480:94;4569:4;4554:13;4480:94;;;4472:102;;4591:75;4659:6;4591:75;;;4581:85;;4689:4;4684:3;4680:14;4673:21;;4383:318;4373:1;4370;4366:9;4361:14;;4326:375;;;4330:14;4714:4;4707:11;;4731:3;4724:10;;3926:814;;;;;;;;;;4748:94;4815:21;4830:5;4815:21;;;4810:3;4803:34;4797:45;;;4849:104;4926:21;4941:5;4926:21;;;4921:3;4914:34;4908:45;;;4960:347;;5072:39;5105:5;5072:39;;;5123:71;5187:6;5182:3;5123:71;;;5116:78;;5199:52;5244:6;5239:3;5232:4;5225:5;5221:16;5199:52;;;5272:29;5294:6;5272:29;;;5267:3;5263:39;5256:46;;5052:255;;;;;;5314:319;;5412:35;5441:5;5412:35;;;5459:61;5513:6;5508:3;5459:61;;;5452:68;;5525:52;5570:6;5565:3;5558:4;5551:5;5547:16;5525:52;;;5598:29;5620:6;5598:29;;;5593:3;5589:39;5582:46;;5392:241;;;;;;5640:339;;5748:35;5777:5;5748:35;;;5795:71;5859:6;5854:3;5795:71;;;5788:78;;5871:52;5916:6;5911:3;5904:4;5897:5;5893:16;5871:52;;;5944:29;5966:6;5944:29;;;5939:3;5935:39;5928:46;;5728:251;;;;;;5987:383;;6147:67;6211:2;6206:3;6147:67;;;6140:74;;6247:34;6243:1;6238:3;6234:11;6227:55;6316:16;6311:2;6306:3;6302:12;6295:38;6361:2;6356:3;6352:12;6345:19;;6133:237;;;;6379:313;;6539:67;6603:2;6598:3;6539:67;;;6532:74;;6639:15;6635:1;6630:3;6626:11;6619:36;6683:2;6678:3;6674:12;6667:19;;6525:167;;;;6701:323;;6861:67;6925:2;6920:3;6861:67;;;6854:74;;6961:25;6957:1;6952:3;6948:11;6941:46;7015:2;7010:3;7006:12;6999:19;;6847:177;;;;7033:317;;7193:67;7257:2;7252:3;7193:67;;;7186:74;;7293:19;7289:1;7284:3;7280:11;7273:40;7341:2;7336:3;7332:12;7325:19;;7179:171;;;;7397:1159;;7522:4;7517:3;7513:14;7603:4;7596:5;7592:16;7586:23;7615:63;7672:4;7667:3;7663:14;7649:12;7615:63;;;7542:142;7757:4;7750:5;7746:16;7740:23;7809:3;7803:4;7799:14;7792:4;7787:3;7783:14;7776:38;7829:69;7893:4;7879:12;7829:69;;;7821:77;;7694:216;7990:4;7983:5;7979:16;7973:23;8042:3;8036:4;8032:14;8025:4;8020:3;8016:14;8009:38;8062:69;8126:4;8112:12;8062:69;;;8054:77;;7920:223;8217:4;8210:5;8206:16;8200:23;8229:63;8286:4;8281:3;8277:14;8263:12;8229:63;;;8153:145;8377:4;8370:5;8366:16;8360:23;8429:3;8423:4;8419:14;8412:4;8407:3;8403:14;8396:38;8449:69;8513:4;8499:12;8449:69;;;8441:77;;8308:222;8547:4;8540:11;;7495:1061;;;;;;8614:885;;8765:4;8760:3;8756:14;8852:4;8845:5;8841:16;8835:23;8904:3;8898:4;8894:14;8887:4;8882:3;8878:14;8871:38;8924:69;8988:4;8974:12;8924:69;;;8916:77;;8785:220;9079:4;9072:5;9068:16;9062:23;9091:57;9142:4;9137:3;9133:14;9119:12;9091:57;;;9015:139;9235:4;9228:5;9224:16;9218:23;9247:63;9304:4;9299:3;9295:14;9281:12;9247:63;;;9164:152;9392:4;9385:5;9381:16;9375:23;9404:63;9461:4;9456:3;9452:14;9438:12;9404:63;;;9326:147;9490:4;9483:11;;8738:761;;;;;;9506:103;9579:24;9597:5;9579:24;;;9574:3;9567:37;9561:48;;;9616:113;9699:24;9717:5;9699:24;;;9694:3;9687:37;9681:48;;;9736:213;;9854:2;9843:9;9839:18;9831:26;;9868:71;9936:1;9925:9;9921:17;9912:6;9868:71;;;9825:124;;;;;9956:421;;10154:2;10143:9;10139:18;10131:26;;10204:9;10198:4;10194:20;10190:1;10179:9;10175:17;10168:47;10229:138;10362:4;10353:6;10229:138;;;10221:146;;10125:252;;;;;10384:201;;10496:2;10485:9;10481:18;10473:26;;10510:65;10572:1;10561:9;10557:17;10548:6;10510:65;;;10467:118;;;;;10592:615;;10804:3;10793:9;10789:19;10781:27;;10855:9;10849:4;10845:20;10841:1;10830:9;10826:17;10819:47;10880:74;10949:4;10940:6;10880:74;;;10872:82;;10965:66;11027:2;11016:9;11012:18;11003:6;10965:66;;;11042:72;11110:2;11099:9;11095:18;11086:6;11042:72;;;11125;11193:2;11182:9;11178:18;11169:6;11125:72;;;10775:432;;;;;;;;11214:407;;11405:2;11394:9;11390:18;11382:26;;11455:9;11449:4;11445:20;11441:1;11430:9;11426:17;11419:47;11480:131;11606:4;11480:131;;;11472:139;;11376:245;;;;11628:506;;11841:2;11830:9;11826:18;11818:26;;11891:9;11885:4;11881:20;11877:1;11866:9;11862:17;11855:47;11916:131;12042:4;11916:131;;;11908:139;;12058:66;12120:2;12109:9;12105:18;12096:6;12058:66;;;11812:322;;;;;12141:407;;12332:2;12321:9;12317:18;12309:26;;12382:9;12376:4;12372:20;12368:1;12357:9;12353:17;12346:47;12407:131;12533:4;12407:131;;;12399:139;;12303:245;;;;12555:506;;12768:2;12757:9;12753:18;12745:26;;12818:9;12812:4;12808:20;12804:1;12793:9;12789:17;12782:47;12843:131;12969:4;12843:131;;;12835:139;;12985:66;13047:2;13036:9;13032:18;13023:6;12985:66;;;12739:322;;;;;13068:361;;13236:2;13225:9;13221:18;13213:26;;13286:9;13280:4;13276:20;13272:1;13261:9;13257:17;13250:47;13311:108;13414:4;13405:6;13311:108;;;13303:116;;13207:222;;;;;13436:213;;13554:2;13543:9;13539:18;13531:26;;13568:71;13636:1;13625:9;13621:17;13612:6;13568:71;;;13525:124;;;;;13656:412;;13822:2;13811:9;13807:18;13799:26;;13836:71;13904:1;13893:9;13889:17;13880:6;13836:71;;;13955:9;13949:4;13945:20;13940:2;13929:9;13925:18;13918:48;13980:78;14053:4;14044:6;13980:78;;;13972:86;;13793:275;;;;;;14075:899;;14353:3;14342:9;14338:19;14330:27;;14368:71;14436:1;14425:9;14421:17;14412:6;14368:71;;;14487:9;14481:4;14477:20;14472:2;14461:9;14457:18;14450:48;14512:74;14581:4;14572:6;14512:74;;;14504:82;;14634:9;14628:4;14624:20;14619:2;14608:9;14604:18;14597:48;14659:74;14728:4;14719:6;14659:74;;;14651:82;;14744:72;14812:2;14801:9;14797:18;14788:6;14744:72;;;14865:9;14859:4;14855:20;14849:3;14838:9;14834:19;14827:49;14890:74;14959:4;14950:6;14890:74;;;14882:82;;14324:650;;;;;;;;;14981:256;;15043:2;15037:9;15027:19;;15081:4;15073:6;15069:17;15180:6;15168:10;15165:22;15144:18;15132:10;15129:34;15126:62;15123:2;;;15201:1;15198;15191:12;15123:2;15221:10;15217:2;15210:22;15021:216;;;;;15244:322;;15388:18;15380:6;15377:30;15374:2;;;15420:1;15417;15410:12;15374:2;15487:4;15483:9;15476:4;15468:6;15464:17;15460:33;15452:41;;15551:4;15545;15541:15;15533:23;;15311:255;;;;15573:166;;15674:3;15666:11;;15712:4;15707:3;15703:14;15695:22;;15660:79;;;;15746:152;;15870:5;15864:12;15854:22;;15835:63;;;;15905:118;;15995:5;15989:12;15979:22;;15960:63;;;;16030:122;;16124:5;16118:12;16108:22;;16089:63;;;;16159:123;;16272:4;16267:3;16263:14;16255:22;;16249:33;;;;16290:193;;16435:6;16430:3;16423:19;16472:4;16467:3;16463:14;16448:29;;16416:67;;;;;16492:153;;16597:6;16592:3;16585:19;16634:4;16629:3;16625:14;16610:29;;16578:67;;;;;16654:163;;16769:6;16764:3;16757:19;16806:4;16801:3;16797:14;16782:29;;16750:67;;;;;16825:91;;16887:24;16905:5;16887:24;;;16876:35;;16870:46;;;;16923:85;;16996:5;16989:13;16982:21;16971:32;;16965:43;;;;17015:121;;17088:42;17081:5;17077:54;17066:65;;17060:76;;;;17143:72;;17205:5;17194:16;;17188:27;;;;17223:145;17304:6;17299:3;17294;17281:30;17360:1;17351:6;17346:3;17342:16;17335:27;17274:94;;;;17377:268;17442:1;17449:101;17463:6;17460:1;17457:13;17449:101;;;17539:1;17534:3;17530:11;17524:18;17520:1;17515:3;17511:11;17504:39;17485:2;17482:1;17478:10;17473:15;;17449:101;;;17565:6;17562:1;17559:13;17556:2;;;17630:1;17621:6;17616:3;17612:16;17605:27;17556:2;17426:219;;;;;17653:97;;17741:2;17737:7;17732:2;17725:5;17721:14;17717:28;17707:38;;17701:49;;;;17758:117;17827:24;17845:5;17827:24;;;17820:5;17817:35;17807:2;;17866:1;17863;17856:12;17807:2;17801:74;;17882:117;17951:24;17969:5;17951:24;;;17944:5;17941:35;17931:2;;17990:1;17987;17980:12;17931:2;17925:74;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./nft.sol\";\r\nimport \"./ownable.sol\";\r\n\r\n/**\r\n   Smart contract to hold the user data also imports the Ownable and NFT smart contracts\r\n */\r\ncontract User is NFT,Ownable{\r\n\r\n    // event for new created users\r\n    event UserCreatedStatus(string stateMsg,bool result);\r\n\r\n    // user data structure\r\n    struct UserData {\r\n        string userName; // a user nickname\r\n\r\n        // Useful for checking if an object already exist in users[]. Must be set to true at UserData object creation time.\r\n        bool exist; \r\n        uint256 mintingLimit;\r\n        address account;\r\n    }\r\n\r\n    // mapping to store a User object for the user that created it.\r\n    mapping(address => UserData) public users;\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @dev Function to create a new user and add them to the users mapping\r\n     */\r\n    function _createUser(string memory _name) private {\r\n\r\n        // create the Object UserData\r\n        UserData memory user = UserData(_name,true,4,msg.sender);\r\n\r\n        // set the mapping user that called the _createUser to their address\r\n        users[msg.sender] = user;\r\n        // initialize  the mapping of user => NFT to 0 \r\n        ownerNFTCount[msg.sender] = 0;\r\n\r\n    }\r\n\r\n    /**\r\n\r\n     * @dev Function to retrieve user data if it exists\r\n     */\r\n\r\n    function getUserData()\r\n        public\r\n        view\r\n        returns (UserData memory)\r\n    {\r\n        return (users[msg.sender]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @dev Function to create a new user and add them to the users mapping if they don't exist\r\n     * @return true if the user was added\r\n     * @return false if the user already exists\r\n     */\r\n\r\n    function CheckAndCreateUser(string memory _name) private  {\r\n\r\n\r\n        // check the there is a user with the specified address \r\n        if (users[msg.sender].exist == false) {\r\n            _createUser(_name);\r\n            // emit an event to indicate a new user was created \r\n            emit UserCreatedStatus(\"New User Created!\",true);\r\n         \r\n        } else {\r\n            //  user already exists emit an event\r\n             emit UserCreatedStatus(\"User exists !\",false);\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     *\r\n     * @dev Function to create a new NFT for a user calling this function\r\n     */\r\n    function createNewNFT(\r\n        string memory name,\r\n        uint256 value, \r\n        string memory category,\r\n        string memory artFileUrl,\r\n        string memory userName\r\n    ) public {\r\n        // make sure the user hasn't passed the limit of how many NFTs they can mint\r\n        // the limit can be adjust later based on the user activity\r\n        require(ownerNFTCount[msg.sender] <= users[msg.sender].mintingLimit);\r\n\r\n        // create a user if they don't exist\r\n        CheckAndCreateUser(userName);\r\n\r\n        // mint a new NFT using NFT contract method _mintERC721Token\r\n        _mintERC721Token(name, value, category, artFileUrl);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\adam\\Repos\\GRAD-ETH-PROJ\\solidity_contracts\\contracts\\user.sol",
  "ast": {
    "absolutePath": "project:/contracts/user.sol",
    "exportedSymbols": {
      "User": [
        655
      ]
    },
    "id": 656,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 518,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:4"
      },
      {
        "id": 519,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:4"
      },
      {
        "absolutePath": "project:/contracts/nft.sol",
        "file": "./nft.sol",
        "id": 520,
        "nodeType": "ImportDirective",
        "scope": 656,
        "sourceUnit": 310,
        "src": "70:19:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownable.sol",
        "file": "./ownable.sol",
        "id": 521,
        "nodeType": "ImportDirective",
        "scope": 656,
        "sourceUnit": 419,
        "src": "91:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 522,
              "name": "NFT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 309,
              "src": "235:3:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$309",
                "typeString": "contract NFT"
              }
            },
            "id": 523,
            "nodeType": "InheritanceSpecifier",
            "src": "235:3:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 524,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 418,
              "src": "239:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$418",
                "typeString": "contract Ownable"
              }
            },
            "id": 525,
            "nodeType": "InheritanceSpecifier",
            "src": "239:7:4"
          }
        ],
        "contractDependencies": [
          48,
          309,
          418
        ],
        "contractKind": "contract",
        "documentation": "Smart contract to hold the user data also imports the Ownable and NFT smart contracts",
        "fullyImplemented": true,
        "id": 655,
        "linearizedBaseContracts": [
          655,
          418,
          309,
          48
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 531,
            "name": "UserCreatedStatus",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "indexed": false,
                  "name": "stateMsg",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "315:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "331:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:29:4"
            },
            "src": "291:53:4"
          },
          {
            "canonicalName": "User.UserData",
            "id": 540,
            "members": [
              {
                "constant": false,
                "id": 533,
                "name": "userName",
                "nodeType": "VariableDeclaration",
                "scope": 540,
                "src": "407:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 532,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "407:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 535,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 540,
                "src": "579:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 534,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "579:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 537,
                "name": "mintingLimit",
                "nodeType": "VariableDeclaration",
                "scope": 540,
                "src": "601:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 536,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 539,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 540,
                "src": "632:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 538,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserData",
            "nodeType": "StructDefinition",
            "scope": 655,
            "src": "380:275:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 544,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 655,
            "src": "732:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$540_storage_$",
              "typeString": "mapping(address => struct User.UserData)"
            },
            "typeName": {
              "id": 543,
              "keyType": {
                "id": 541,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "740:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "732:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$540_storage_$",
                "typeString": "mapping(address => struct User.UserData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 542,
                "name": "UserData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 540,
                "src": "751:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserData_$540_storage_ptr",
                  "typeString": "struct User.UserData"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "939:330:4",
              "statements": [
                {
                  "assignments": [
                    550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 550,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "991:20:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$540_memory_ptr",
                        "typeString": "struct User.UserData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 549,
                        "name": "UserData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 540,
                        "src": "991:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$540_storage_ptr",
                          "typeString": "struct User.UserData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 558,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 552,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "1023:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1029:4:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "1036:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1036:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 551,
                      "name": "UserData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "1014:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserData_$540_storage_ptr_$",
                        "typeString": "type(struct User.UserData storage pointer)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$540_memory",
                      "typeString": "struct User.UserData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "991:56:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "1138:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$540_storage_$",
                          "typeString": "mapping(address => struct User.UserData storage ref)"
                        }
                      },
                      "id": 562,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "1144:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1144:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1138:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$540_storage",
                        "typeString": "struct User.UserData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 563,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "1158:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$540_memory_ptr",
                        "typeString": "struct User.UserData memory"
                      }
                    },
                    "src": "1138:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$540_storage",
                      "typeString": "struct User.UserData storage ref"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 566,
                        "name": "ownerNFTCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1230:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 569,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "1244:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1244:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1230:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1258:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1230:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:29:4"
                }
              ]
            },
            "documentation": "\n     * @dev Function to create a new user and add them to the users mapping",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "910:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:21:4"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:0:4"
            },
            "scope": 655,
            "src": "889:380:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "1449:45:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "1468:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$540_storage_$",
                            "typeString": "mapping(address => struct User.UserData storage ref)"
                          }
                        },
                        "id": 582,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 580,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "1474:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1474:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1468:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$540_storage",
                          "typeString": "struct User.UserData storage ref"
                        }
                      }
                    ],
                    "id": 583,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1467:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$540_storage",
                      "typeString": "struct User.UserData storage ref"
                    }
                  },
                  "functionReturnParameters": 578,
                  "id": 584,
                  "nodeType": "Return",
                  "src": "1460:26:4"
                }
              ]
            },
            "documentation": "@dev Function to retrieve user data if it exists",
            "id": 586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:2:4"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "1427:15:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserData_$540_memory_ptr",
                    "typeString": "struct User.UserData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 576,
                    "name": "UserData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 540,
                    "src": "1427:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$540_storage_ptr",
                      "typeString": "struct User.UserData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:17:4"
            },
            "scope": 655,
            "src": "1356:138:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "1777:453:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 591,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "1862:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$540_storage_$",
                            "typeString": "mapping(address => struct User.UserData storage ref)"
                          }
                        },
                        "id": 594,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 592,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "1868:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1868:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1862:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$540_storage",
                          "typeString": "struct User.UserData storage ref"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 535,
                      "src": "1862:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1889:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1862:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "2087:126:4",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55736572206578697374732021",
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2177:15:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_95da09840e517bc488ba910267604a2fd6fa7f7915e2e0606439e56073ddecf1",
                                "typeString": "literal_string \"User exists !\""
                              },
                              "value": "User exists !"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2193:5:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_95da09840e517bc488ba910267604a2fd6fa7f7915e2e0606439e56073ddecf1",
                                "typeString": "literal_string \"User exists !\""
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 608,
                            "name": "UserCreatedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "2159:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (string memory,bool)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2159:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 612,
                        "nodeType": "EmitStatement",
                        "src": "2154:45:4"
                      }
                    ]
                  },
                  "id": 614,
                  "nodeType": "IfStatement",
                  "src": "1858:355:4",
                  "trueBody": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "1896:185:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 599,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "1923:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 598,
                            "name": "_createUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 574,
                            "src": "1911:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1911:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 601,
                        "nodeType": "ExpressionStatement",
                        "src": "1911:18:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4e65772055736572204372656174656421",
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2033:19:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fcf45b15b07ae73a71799631d6f5477f8e0fa936e68d45ba3e9a952444dbe32e",
                                "typeString": "literal_string \"New User Created!\""
                              },
                              "value": "New User Created!"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2053:4:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fcf45b15b07ae73a71799631d6f5477f8e0fa936e68d45ba3e9a952444dbe32e",
                                "typeString": "literal_string \"New User Created!\""
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 602,
                            "name": "UserCreatedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "2015:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (string memory,bool)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2015:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 606,
                        "nodeType": "EmitStatement",
                        "src": "2010:48:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "\n     * @dev Function to create a new user and add them to the users mapping if they don't exist\n@return true if the user was added\n@return false if the user already exists",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CheckAndCreateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "1747:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1746:21:4"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:4"
            },
            "scope": 655,
            "src": "1719:511:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "2530:463:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 630,
                            "name": "ownerNFTCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2704:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 633,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 631,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "2718:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2718:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2704:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 634,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "2733:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$540_storage_$",
                                "typeString": "mapping(address => struct User.UserData storage ref)"
                              }
                            },
                            "id": 637,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 635,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "2739:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2739:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2733:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$540_storage",
                              "typeString": "struct User.UserData storage ref"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintingLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 537,
                          "src": "2733:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2704:59:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        673,
                        674
                      ],
                      "referencedDeclaration": 673,
                      "src": "2696:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2696:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "2696:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2842:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 642,
                      "name": "CheckAndCreateUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "2823:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2823:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 647,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "2951:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "2957:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "2964:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "artFileUrl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 624,
                        "src": "2974:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 646,
                      "name": "_mintERC721Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "2934:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,uint256,string memory,string memory)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2934:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "2934:51:4"
                }
              ]
            },
            "documentation": "\n     * @dev Function to create a new NFT for a user calling this function",
            "id": 654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "2371:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "2400:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "2425:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "name": "artFileUrl",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "2458:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "2493:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2493:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2360:162:4"
            },
            "returnParameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2530:0:4"
            },
            "scope": 655,
            "src": "2339:654:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 656,
        "src": "218:2778:4"
      }
    ],
    "src": "0:2998:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/user.sol",
      "exportedSymbols": {
        "User": [
          655
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 518,
        "name": "PragmaDirective",
        "src": "0:31:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 519,
        "name": "PragmaDirective",
        "src": "33:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 310,
          "absolutePath": "project:/contracts/nft.sol",
          "file": "./nft.sol",
          "scope": 656,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 520,
        "name": "ImportDirective",
        "src": "70:19:4"
      },
      {
        "attributes": {
          "SourceUnit": 419,
          "absolutePath": "project:/contracts/ownable.sol",
          "file": "./ownable.sol",
          "scope": 656,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 521,
        "name": "ImportDirective",
        "src": "91:23:4"
      },
      {
        "attributes": {
          "contractDependencies": [
            48,
            309,
            418
          ],
          "contractKind": "contract",
          "documentation": "Smart contract to hold the user data also imports the Ownable and NFT smart contracts",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            655,
            418,
            309,
            48
          ],
          "name": "User",
          "scope": 656
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFT",
                  "referencedDeclaration": 309,
                  "type": "contract NFT"
                },
                "id": 522,
                "name": "UserDefinedTypeName",
                "src": "235:3:4"
              }
            ],
            "id": 523,
            "name": "InheritanceSpecifier",
            "src": "235:3:4"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 418,
                  "type": "contract Ownable"
                },
                "id": 524,
                "name": "UserDefinedTypeName",
                "src": "239:7:4"
              }
            ],
            "id": 525,
            "name": "InheritanceSpecifier",
            "src": "239:7:4"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "UserCreatedStatus"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "stateMsg",
                      "scope": 531,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 526,
                        "name": "ElementaryTypeName",
                        "src": "315:6:4"
                      }
                    ],
                    "id": 527,
                    "name": "VariableDeclaration",
                    "src": "315:15:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "result",
                      "scope": 531,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 528,
                        "name": "ElementaryTypeName",
                        "src": "331:4:4"
                      }
                    ],
                    "id": 529,
                    "name": "VariableDeclaration",
                    "src": "331:11:4"
                  }
                ],
                "id": 530,
                "name": "ParameterList",
                "src": "314:29:4"
              }
            ],
            "id": 531,
            "name": "EventDefinition",
            "src": "291:53:4"
          },
          {
            "attributes": {
              "canonicalName": "User.UserData",
              "name": "UserData",
              "scope": 655,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "userName",
                  "scope": 540,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 532,
                    "name": "ElementaryTypeName",
                    "src": "407:6:4"
                  }
                ],
                "id": 533,
                "name": "VariableDeclaration",
                "src": "407:15:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exist",
                  "scope": 540,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 534,
                    "name": "ElementaryTypeName",
                    "src": "579:4:4"
                  }
                ],
                "id": 535,
                "name": "VariableDeclaration",
                "src": "579:10:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "mintingLimit",
                  "scope": 540,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 536,
                    "name": "ElementaryTypeName",
                    "src": "601:7:4"
                  }
                ],
                "id": 537,
                "name": "VariableDeclaration",
                "src": "601:20:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "account",
                  "scope": 540,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 538,
                    "name": "ElementaryTypeName",
                    "src": "632:7:4"
                  }
                ],
                "id": 539,
                "name": "VariableDeclaration",
                "src": "632:15:4"
              }
            ],
            "id": 540,
            "name": "StructDefinition",
            "src": "380:275:4"
          },
          {
            "attributes": {
              "constant": false,
              "name": "users",
              "scope": 655,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct User.UserData)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct User.UserData)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 541,
                    "name": "ElementaryTypeName",
                    "src": "740:7:4"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "UserData",
                      "referencedDeclaration": 540,
                      "type": "struct User.UserData"
                    },
                    "id": 542,
                    "name": "UserDefinedTypeName",
                    "src": "751:8:4"
                  }
                ],
                "id": 543,
                "name": "Mapping",
                "src": "732:28:4"
              }
            ],
            "id": 544,
            "name": "VariableDeclaration",
            "src": "732:41:4"
          },
          {
            "attributes": {
              "documentation": "\n     * @dev Function to create a new user and add them to the users mapping",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_createUser",
              "scope": 655,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 574,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 545,
                        "name": "ElementaryTypeName",
                        "src": "910:6:4"
                      }
                    ],
                    "id": 546,
                    "name": "VariableDeclaration",
                    "src": "910:19:4"
                  }
                ],
                "id": 547,
                "name": "ParameterList",
                "src": "909:21:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 548,
                "name": "ParameterList",
                "src": "939:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        550
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "user",
                          "scope": 573,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct User.UserData",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "UserData",
                              "referencedDeclaration": 540,
                              "type": "struct User.UserData"
                            },
                            "id": 549,
                            "name": "UserDefinedTypeName",
                            "src": "991:8:4"
                          }
                        ],
                        "id": 550,
                        "name": "VariableDeclaration",
                        "src": "991:20:4"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct User.UserData memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 540,
                              "type": "type(struct User.UserData storage pointer)",
                              "value": "UserData"
                            },
                            "id": 551,
                            "name": "Identifier",
                            "src": "1014:8:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 546,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 552,
                            "name": "Identifier",
                            "src": "1023:5:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 553,
                            "name": "Literal",
                            "src": "1029:4:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "34",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 4",
                              "value": "4"
                            },
                            "id": 554,
                            "name": "Literal",
                            "src": "1034:1:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 670,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 555,
                                "name": "Identifier",
                                "src": "1036:3:4"
                              }
                            ],
                            "id": 556,
                            "name": "MemberAccess",
                            "src": "1036:10:4"
                          }
                        ],
                        "id": 557,
                        "name": "FunctionCall",
                        "src": "1014:33:4"
                      }
                    ],
                    "id": 558,
                    "name": "VariableDeclarationStatement",
                    "src": "991:56:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct User.UserData storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct User.UserData storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 544,
                                  "type": "mapping(address => struct User.UserData storage ref)",
                                  "value": "users"
                                },
                                "id": 559,
                                "name": "Identifier",
                                "src": "1138:5:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 670,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 560,
                                    "name": "Identifier",
                                    "src": "1144:3:4"
                                  }
                                ],
                                "id": 561,
                                "name": "MemberAccess",
                                "src": "1144:10:4"
                              }
                            ],
                            "id": 562,
                            "name": "IndexAccess",
                            "src": "1138:17:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 550,
                              "type": "struct User.UserData memory",
                              "value": "user"
                            },
                            "id": 563,
                            "name": "Identifier",
                            "src": "1158:4:4"
                          }
                        ],
                        "id": 564,
                        "name": "Assignment",
                        "src": "1138:24:4"
                      }
                    ],
                    "id": 565,
                    "name": "ExpressionStatement",
                    "src": "1138:24:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 83,
                                  "type": "mapping(address => uint256)",
                                  "value": "ownerNFTCount"
                                },
                                "id": 566,
                                "name": "Identifier",
                                "src": "1230:13:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 670,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 567,
                                    "name": "Identifier",
                                    "src": "1244:3:4"
                                  }
                                ],
                                "id": 568,
                                "name": "MemberAccess",
                                "src": "1244:10:4"
                              }
                            ],
                            "id": 569,
                            "name": "IndexAccess",
                            "src": "1230:25:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 570,
                            "name": "Literal",
                            "src": "1258:1:4"
                          }
                        ],
                        "id": 571,
                        "name": "Assignment",
                        "src": "1230:29:4"
                      }
                    ],
                    "id": 572,
                    "name": "ExpressionStatement",
                    "src": "1230:29:4"
                  }
                ],
                "id": 573,
                "name": "Block",
                "src": "939:330:4"
              }
            ],
            "id": 574,
            "name": "FunctionDefinition",
            "src": "889:380:4"
          },
          {
            "attributes": {
              "documentation": "@dev Function to retrieve user data if it exists",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getUserData",
              "scope": 655,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 575,
                "name": "ParameterList",
                "src": "1376:2:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 586,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct User.UserData",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "UserData",
                          "referencedDeclaration": 540,
                          "type": "struct User.UserData"
                        },
                        "id": 576,
                        "name": "UserDefinedTypeName",
                        "src": "1427:8:4"
                      }
                    ],
                    "id": 577,
                    "name": "VariableDeclaration",
                    "src": "1427:15:4"
                  }
                ],
                "id": 578,
                "name": "ParameterList",
                "src": "1426:17:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 578
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct User.UserData storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct User.UserData storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 544,
                                  "type": "mapping(address => struct User.UserData storage ref)",
                                  "value": "users"
                                },
                                "id": 579,
                                "name": "Identifier",
                                "src": "1468:5:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 670,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 580,
                                    "name": "Identifier",
                                    "src": "1474:3:4"
                                  }
                                ],
                                "id": 581,
                                "name": "MemberAccess",
                                "src": "1474:10:4"
                              }
                            ],
                            "id": 582,
                            "name": "IndexAccess",
                            "src": "1468:17:4"
                          }
                        ],
                        "id": 583,
                        "name": "TupleExpression",
                        "src": "1467:19:4"
                      }
                    ],
                    "id": 584,
                    "name": "Return",
                    "src": "1460:26:4"
                  }
                ],
                "id": 585,
                "name": "Block",
                "src": "1449:45:4"
              }
            ],
            "id": 586,
            "name": "FunctionDefinition",
            "src": "1356:138:4"
          },
          {
            "attributes": {
              "documentation": "\n     * @dev Function to create a new user and add them to the users mapping if they don't exist\n@return true if the user was added\n@return false if the user already exists",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "CheckAndCreateUser",
              "scope": 655,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 616,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 587,
                        "name": "ElementaryTypeName",
                        "src": "1747:6:4"
                      }
                    ],
                    "id": 588,
                    "name": "VariableDeclaration",
                    "src": "1747:19:4"
                  }
                ],
                "id": 589,
                "name": "ParameterList",
                "src": "1746:21:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 590,
                "name": "ParameterList",
                "src": "1777:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "exist",
                              "referencedDeclaration": 535,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct User.UserData storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 544,
                                      "type": "mapping(address => struct User.UserData storage ref)",
                                      "value": "users"
                                    },
                                    "id": 591,
                                    "name": "Identifier",
                                    "src": "1862:5:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 670,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 592,
                                        "name": "Identifier",
                                        "src": "1868:3:4"
                                      }
                                    ],
                                    "id": 593,
                                    "name": "MemberAccess",
                                    "src": "1868:10:4"
                                  }
                                ],
                                "id": 594,
                                "name": "IndexAccess",
                                "src": "1862:17:4"
                              }
                            ],
                            "id": 595,
                            "name": "MemberAccess",
                            "src": "1862:23:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 596,
                            "name": "Literal",
                            "src": "1889:5:4"
                          }
                        ],
                        "id": 597,
                        "name": "BinaryOperation",
                        "src": "1862:32:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 574,
                                      "type": "function (string memory)",
                                      "value": "_createUser"
                                    },
                                    "id": 598,
                                    "name": "Identifier",
                                    "src": "1911:11:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 588,
                                      "type": "string memory",
                                      "value": "_name"
                                    },
                                    "id": 599,
                                    "name": "Identifier",
                                    "src": "1923:5:4"
                                  }
                                ],
                                "id": 600,
                                "name": "FunctionCall",
                                "src": "1911:18:4"
                              }
                            ],
                            "id": 601,
                            "name": "ExpressionStatement",
                            "src": "1911:18:4"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_fcf45b15b07ae73a71799631d6f5477f8e0fa936e68d45ba3e9a952444dbe32e",
                                          "typeString": "literal_string \"New User Created!\""
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 531,
                                      "type": "function (string memory,bool)",
                                      "value": "UserCreatedStatus"
                                    },
                                    "id": 602,
                                    "name": "Identifier",
                                    "src": "2015:17:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "4e65772055736572204372656174656421",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"New User Created!\"",
                                      "value": "New User Created!"
                                    },
                                    "id": 603,
                                    "name": "Literal",
                                    "src": "2033:19:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "74727565",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "true"
                                    },
                                    "id": 604,
                                    "name": "Literal",
                                    "src": "2053:4:4"
                                  }
                                ],
                                "id": 605,
                                "name": "FunctionCall",
                                "src": "2015:43:4"
                              }
                            ],
                            "id": 606,
                            "name": "EmitStatement",
                            "src": "2010:48:4"
                          }
                        ],
                        "id": 607,
                        "name": "Block",
                        "src": "1896:185:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_95da09840e517bc488ba910267604a2fd6fa7f7915e2e0606439e56073ddecf1",
                                          "typeString": "literal_string \"User exists !\""
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 531,
                                      "type": "function (string memory,bool)",
                                      "value": "UserCreatedStatus"
                                    },
                                    "id": 608,
                                    "name": "Identifier",
                                    "src": "2159:17:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "55736572206578697374732021",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"User exists !\"",
                                      "value": "User exists !"
                                    },
                                    "id": 609,
                                    "name": "Literal",
                                    "src": "2177:15:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "66616c7365",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "false"
                                    },
                                    "id": 610,
                                    "name": "Literal",
                                    "src": "2193:5:4"
                                  }
                                ],
                                "id": 611,
                                "name": "FunctionCall",
                                "src": "2159:40:4"
                              }
                            ],
                            "id": 612,
                            "name": "EmitStatement",
                            "src": "2154:45:4"
                          }
                        ],
                        "id": 613,
                        "name": "Block",
                        "src": "2087:126:4"
                      }
                    ],
                    "id": 614,
                    "name": "IfStatement",
                    "src": "1858:355:4"
                  }
                ],
                "id": 615,
                "name": "Block",
                "src": "1777:453:4"
              }
            ],
            "id": 616,
            "name": "FunctionDefinition",
            "src": "1719:511:4"
          },
          {
            "attributes": {
              "documentation": "\n     * @dev Function to create a new NFT for a user calling this function",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createNewNFT",
              "scope": 655,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 654,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 617,
                        "name": "ElementaryTypeName",
                        "src": "2371:6:4"
                      }
                    ],
                    "id": 618,
                    "name": "VariableDeclaration",
                    "src": "2371:18:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
                      "scope": 654,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 619,
                        "name": "ElementaryTypeName",
                        "src": "2400:7:4"
                      }
                    ],
                    "id": 620,
                    "name": "VariableDeclaration",
                    "src": "2400:13:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "category",
                      "scope": 654,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 621,
                        "name": "ElementaryTypeName",
                        "src": "2425:6:4"
                      }
                    ],
                    "id": 622,
                    "name": "VariableDeclaration",
                    "src": "2425:22:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "artFileUrl",
                      "scope": 654,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 623,
                        "name": "ElementaryTypeName",
                        "src": "2458:6:4"
                      }
                    ],
                    "id": 624,
                    "name": "VariableDeclaration",
                    "src": "2458:24:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "userName",
                      "scope": 654,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 625,
                        "name": "ElementaryTypeName",
                        "src": "2493:6:4"
                      }
                    ],
                    "id": 626,
                    "name": "VariableDeclaration",
                    "src": "2493:22:4"
                  }
                ],
                "id": 627,
                "name": "ParameterList",
                "src": "2360:162:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 628,
                "name": "ParameterList",
                "src": "2530:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                673,
                                674
                              ],
                              "referencedDeclaration": 673,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 629,
                            "name": "Identifier",
                            "src": "2696:7:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 83,
                                      "type": "mapping(address => uint256)",
                                      "value": "ownerNFTCount"
                                    },
                                    "id": 630,
                                    "name": "Identifier",
                                    "src": "2704:13:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 670,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 631,
                                        "name": "Identifier",
                                        "src": "2718:3:4"
                                      }
                                    ],
                                    "id": 632,
                                    "name": "MemberAccess",
                                    "src": "2718:10:4"
                                  }
                                ],
                                "id": 633,
                                "name": "IndexAccess",
                                "src": "2704:25:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "mintingLimit",
                                  "referencedDeclaration": 537,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct User.UserData storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 544,
                                          "type": "mapping(address => struct User.UserData storage ref)",
                                          "value": "users"
                                        },
                                        "id": 634,
                                        "name": "Identifier",
                                        "src": "2733:5:4"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 670,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 635,
                                            "name": "Identifier",
                                            "src": "2739:3:4"
                                          }
                                        ],
                                        "id": 636,
                                        "name": "MemberAccess",
                                        "src": "2739:10:4"
                                      }
                                    ],
                                    "id": 637,
                                    "name": "IndexAccess",
                                    "src": "2733:17:4"
                                  }
                                ],
                                "id": 638,
                                "name": "MemberAccess",
                                "src": "2733:30:4"
                              }
                            ],
                            "id": 639,
                            "name": "BinaryOperation",
                            "src": "2704:59:4"
                          }
                        ],
                        "id": 640,
                        "name": "FunctionCall",
                        "src": "2696:68:4"
                      }
                    ],
                    "id": 641,
                    "name": "ExpressionStatement",
                    "src": "2696:68:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 616,
                              "type": "function (string memory)",
                              "value": "CheckAndCreateUser"
                            },
                            "id": 642,
                            "name": "Identifier",
                            "src": "2823:18:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 626,
                              "type": "string memory",
                              "value": "userName"
                            },
                            "id": 643,
                            "name": "Identifier",
                            "src": "2842:8:4"
                          }
                        ],
                        "id": 644,
                        "name": "FunctionCall",
                        "src": "2823:28:4"
                      }
                    ],
                    "id": 645,
                    "name": "ExpressionStatement",
                    "src": "2823:28:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 189,
                              "type": "function (string memory,uint256,string memory,string memory)",
                              "value": "_mintERC721Token"
                            },
                            "id": 646,
                            "name": "Identifier",
                            "src": "2934:16:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 618,
                              "type": "string memory",
                              "value": "name"
                            },
                            "id": 647,
                            "name": "Identifier",
                            "src": "2951:4:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 620,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 648,
                            "name": "Identifier",
                            "src": "2957:5:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 622,
                              "type": "string memory",
                              "value": "category"
                            },
                            "id": 649,
                            "name": "Identifier",
                            "src": "2964:8:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 624,
                              "type": "string memory",
                              "value": "artFileUrl"
                            },
                            "id": 650,
                            "name": "Identifier",
                            "src": "2974:10:4"
                          }
                        ],
                        "id": 651,
                        "name": "FunctionCall",
                        "src": "2934:51:4"
                      }
                    ],
                    "id": 652,
                    "name": "ExpressionStatement",
                    "src": "2934:51:4"
                  }
                ],
                "id": 653,
                "name": "Block",
                "src": "2530:463:4"
              }
            ],
            "id": 654,
            "name": "FunctionDefinition",
            "src": "2339:654:4"
          }
        ],
        "id": 655,
        "name": "ContractDefinition",
        "src": "218:2778:4"
      }
    ],
    "id": 656,
    "name": "SourceUnit",
    "src": "0:2998:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xf3516922ab7b85da7be501737934fc735e896c9a5685afafa68a7680ba6feed0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "NFTid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "NewNFTCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x498e86ce68b74d646cb38349145e0faf33df652ddb4c63ebdbfb77082e620c90": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "stateMsg",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ],
          "name": "UserCreatedStatus",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9d9F0B4c226281a8c92d702d4e09f9Fc780353AC",
      "transactionHash": "0xc045554156e8f2c97a80e62b8de70df9deff0b07d25396bf81f13fa88d078d3e"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-27T03:48:37.082Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "method that allows only the owner of an NFT using the modifier onlyOwnerOf to approve an other user to transfer ownership "
      },
      "balanceOf(address)": {
        "details": "method to get the number of NFT's a caller has",
        "return": "uint as the count"
      },
      "createNewNFT(string,uint256,string,string,string)": {
        "details": "Function to create a new NFT for a user calling this function"
      },
      "getAllNFTs()": {
        "details": "method that returns the entire NFTsList",
        "return": "Nft[] "
      },
      "getUserData()": {
        "details": "Function to retrieve user data if it exists"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "method to get the address of the an NFT owner",
        "return": "address of the owner"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferFrom(address,address,uint256)": {
        "details": "public payable method that gets called  from the front-end using metamask as the user account and web.js this method will call _transferNFT to transfer the NFT ownership and transfers the amount set in the  transaction from the sender's address to the receiver's (caller) address "
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Smart contract to hold the user data also imports the Ownable and NFT smart contracts"
  }
}